{"version":3,"sources":["game/gameContext/actions.js","game/gameContext/functions/gameConstants.js","game/gameContext/functions/logStateFunctions.js","game/gameContext/functions/gameStateFunctions.js","game/gameContext/functions/boardStateFunctions.js","game/gameContext/reducer.js","game/gameContext/functions/diceStateFunctions.js","game/gameContext/index.js","global/components/index.js","game/board/component.jsx","game/log/assets/helpIcon.jsx","game/log/assets/settingsIcon.jsx","game/log/component.jsx","game/dice/component.jsx","game/winScreen/component.jsx","game/popupWindows/component.jsx","game/preGameMenu/component.jsx","game/floatingText/component.jsx","game/component.jsx","game/gameContext/functions/aiFunctions.js","App.js","index.js"],"names":["moveStone","stoneID","type","parameters","setGameType","gameType","setWindowState","windowState","setWhoFirst","whoFirst","compareCoords","x","y","calculateMoveDistance","state","gameState","rollResult","filter","r","length","calculateLandingCoords","tileWithID","boardState","flat","find","tile","stones","includes","charAt","whiteStonePath","findIndex","c","coordinates","blackStonePath","Error","rowLetterMap","whiteStoneIDs","blackStoneIDs","defaultGameState","turnNumber","activePlayer","rolled","moveLog","modifier","addToMoveLog","moveToLogArr","incrementTurnNumber","advanceTurn","nextActivePlayer","stoneCoords","getTileWithID","getTileModifierWithCoords","validateMove","landingCoords","tx","ty","firstStoneAtTargetLocation","getTileStonesWithCoords","prevState","newLocation","activePlayerText","loggedPrevState","addInStone","map","row","id","prevBoardState","moveStoneToLandingCoords","stoneToBump","bumpStone","reducer","action","Array","fill","Math","random","testState","moveMessage","validMoves","moveDistance","noValidMoveLoggedState","rollZeroLoggedState","rollDice","resetRollResult","moveStoneWrap","moveToLog","setTheGameType","setTheWindowState","setTheWhoFirst","GameContext","React","createContext","SubTitleText","styled","h2","SubTitleTextButton","Blur","div","Window","GameBoardWrapper","Link","GameBoardCornerDot","GameBoardColumnLabel","GameBoardRowLabel","GameBoardRow","GameBoardColumn","GameTile","props","css","GameTileText","GameStone","className","viewBox","d","color","Board","useContext","gameContextState","dispatch","_","rowIndex","columnIndex","onClick","Actions","HelpIcon","SettingsIcon","LogWrap","TurnMoveTracker","MovesWrap","IconWrap","LogEntry","SwapDirectionWrap","Line","Log","message","i","substring","DiceRow","Die","dot","RollButton","RollText","Dice","e","WinScreen","InfoWindow","SettingsWindow","PopupWindows","PreGameMenu","first","TitleTextWrap","H1","h1","H2","FloatingText","Game","innerContext","useReducer","useEffect","aiStones","aiPath","validStonesToMove","sortedStrengthOfMove","strength","reduce","accumulator","pathCoords","index","sort","firstMove","secondMove","console","log","bestStoneToMove","aiTurn","Provider","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb8eac45.chunk.js","sourcesContent":["\r\n// BOARD STATE ACTIONS //\r\n\r\nexport const moveStone = (stoneID) => ({\r\n    type: \"moveStone\",\r\n    parameters: {\r\n        stoneID: stoneID,\r\n    },\r\n})\r\n\r\n// DICE STATE ACTIONS //\r\n\r\nexport const rollDice = () => ({\r\n    type: \"rollDice\",\r\n    parameters: {},\r\n})\r\n\r\nexport const resetRolled = () => ({\r\n    type: \"resetRolled\",\r\n    parameters: {},\r\n})\r\n\r\n// GAME STATE ACTIONS //\r\n\r\nexport const resetState = () => ({\r\n    type: \"resetState\",\r\n    parameters: {},\r\n})\r\n\r\nexport const setGameType = (gameType) => ({\r\n    type: \"setGameType\",\r\n    parameters: {\r\n        gameType: gameType,\r\n    },\r\n})\r\n\r\nexport const setWindowState = (windowState) => ({\r\n    type: \"setWindowState\",\r\n    parameters: {\r\n        windowState: windowState,\r\n    },\r\n})\r\n\r\nexport const setWhoFirst = (whoFirst) => ({\r\n    type: \"setWhoFirst\",\r\n    parameters: {\r\n        whoFirst: whoFirst,\r\n    },\r\n})\r\n\r\n// LOG STATE ACTIONS //\r\n\r\nexport const logMove = (moveToLog) => ({\r\n    type: \"logMove\",\r\n    parameters: {\r\n        moveToLog: moveToLog,\r\n    },\r\n})","\r\n// Functions\r\n\r\nexport const compareCoords = (x, y) => (\r\n  x[0] === y[0] && x[1] === y[1]\r\n)\r\n\r\nexport const calculateMoveDistance = (state) => (\r\n  state.gameState.rollResult.filter((r) => r).length\r\n);\r\n\r\nexport const calculateLandingCoords = (state, stoneID) => {\r\n  const tileWithID = state.boardState.flat().find((tile) => {\r\n    if (!tile.stones) {\r\n      debugger\r\n    }\r\n    return tile?.stones?.includes(stoneID) ?? false\r\n  })\r\n  if(stoneID.charAt(0) === \"W\")\r\n      return whiteStonePath[\r\n          whiteStonePath.findIndex((c) =>\r\n              compareCoords(c, tileWithID.coordinates)) + calculateMoveDistance(state)\r\n      ]\r\n  else if(stoneID.charAt(0) === \"B\")\r\n      return blackStonePath[\r\n          blackStonePath.findIndex((c) =>\r\n              compareCoords(c, tileWithID.coordinates)) + calculateMoveDistance(state)\r\n      ]\r\n  else\r\n      throw new Error(\"Invalid stone id (not W or B)\");\r\n}\r\n\r\n// Data\r\n\r\nexport const rowLetterMap = [\r\n  \"A\", \"B\", \r\n  \"C\", \"D\", \r\n  \"E\", \"F\", \r\n  \"G\",\r\n];\r\n\r\nexport const whiteStoneIDs = [\r\n    \"W1\", \"W2\", \"W3\",\r\n    \"W4\", \"W5\", \"W6\",\r\n];\r\n  \r\nexport const blackStoneIDs = [\r\n  \"B1\", \"B2\", \"B3\",\r\n  \"B4\", \"B5\", \"B6\",\r\n];\r\n\r\nexport const whiteStonePath = [\r\n  [0,3], [0,2], \r\n  [0,1], [0,0], \r\n  [1,0], [1,1], \r\n  [1,2], [1,3], \r\n  [1,4], [1,5], \r\n  [1,6], [0,6], \r\n  [0,5], [0,4],\r\n];\r\n\r\nexport const blackStonePath = [\r\n  [2,3], [2,2], \r\n  [2,1], [2,0], \r\n  [1,0], [1,1], \r\n  [1,2], [1,3], \r\n  [1,4], [1,5], \r\n  [1,6], [2,6], \r\n  [2,5], [2,4],\r\n];\r\n\r\nexport const defaultGameState = {\r\n  gameState: {\r\n      whoFirst: \"\",\r\n      turnNumber: 1,\r\n      activePlayer: 'W',\r\n      rollResult: [false, false, false, false],\r\n      rolled: false,\r\n      gameType: \"\",\r\n      windowState: \"\",\r\n      moveLog: [\"Welcome to\", \"Game of Twenty Squares\", \"-\"],\r\n  },\r\n  boardState: [\r\n    [\r\n      { // [0,0]\r\n        modifier: \"Rosette\",\r\n        coordinates: [0,0],\r\n        stones: [],\r\n      },\r\n      { // [0,1]\r\n        modifier: \"None\",\r\n        coordinates: [0,1],\r\n        stones: [],\r\n      },\r\n      { // [0,2]\r\n        modifier: \"None\",\r\n        coordinates: [0,2],\r\n        stones: [],\r\n      },\r\n      { // [0,3]\r\n        modifier: \"Empty\",\r\n        coordinates: [0,3],\r\n        stones: [\"W1\",\"W2\",\"W3\",\"W4\",\"W5\",\"W6\"],\r\n      },\r\n      { // [0,4]\r\n        modifier: \"Empty\",\r\n        coordinates: [0,4],\r\n        stones: [],\r\n      },\r\n      { // [0,5]\r\n        modifier: \"Rosette\",\r\n        coordinates: [0,5],\r\n        stones: [],\r\n      },\r\n      { // [0,6]\r\n        modifier: \"None\",\r\n        coordinates: [0,6],\r\n        stones: [],\r\n      },\r\n    ],\r\n    [\r\n      { // [1,0]\r\n        modifier: \"None\",\r\n        coordinates: [1,0],\r\n        stones: [],\r\n      },\r\n      { // [1,1]\r\n        modifier: \"None\",\r\n        coordinates: [1,1],\r\n        stones: [],\r\n      },\r\n      { // [1,2]\r\n        modifier: \"None\",\r\n        coordinates: [1,2],\r\n        stones: [],\r\n      },\r\n      { // [1,3]\r\n        modifier: \"Rosette\",\r\n        coordinates: [1,3],\r\n        stones: [],\r\n      },\r\n      { // [1,4]\r\n        modifier: \"None\",\r\n        coordinates: [1,4],\r\n        stones: [],\r\n      },\r\n      { // [1,5]\r\n        modifier: \"None\",\r\n        coordinates: [1,5],\r\n        stones: [],\r\n      },\r\n      { // [1,6]\r\n        modifier: \"None\",\r\n        coordinates: [1,6],\r\n        stones: [],\r\n      },\r\n    ],\r\n    [\r\n      { // [2,0]\r\n        modifier: \"Rosette\",\r\n        coordinates: [2,0],\r\n        stones: [],\r\n      },\r\n      { // [2,1]\r\n        modifier: \"None\",\r\n        coordinates: [2,1],\r\n        stones: [],\r\n      },\r\n      { // [2,2]\r\n        modifier: \"None\",\r\n        coordinates: [2,2],\r\n        stones: [],\r\n      },\r\n      { // [2,3]\r\n        modifier: \"Empty\",\r\n        coordinates: [2,3],\r\n        stones: [\"B1\",\"B2\",\"B3\",\"B4\",\"B5\",\"B6\"],\r\n      },\r\n      { // [2,4]\r\n        modifier: \"Empty\",\r\n        coordinates: [2,4],\r\n        stones: [],\r\n      },\r\n      { // [2,5]\r\n        modifier: \"Rosette\",\r\n        coordinates: [2,5],\r\n        stones: [],\r\n      },\r\n      { // [2,6]\r\n        modifier: \"None\",\r\n        coordinates: [2,6],\r\n        stones: [],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","\r\nexport const addToMoveLog = (state, moveToLogArr) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        moveLog: [...state.gameState.moveLog, ...moveToLogArr],\r\n    }\r\n});","import { getTileWithID, getTileModifierWithCoords } from './boardStateFunctions';\r\n\r\nconst incrementTurnNumber = (state) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        turnNumber: state.gameState.turnNumber + 1,\r\n    }\r\n})\r\n\r\nexport const advanceTurn = (state, stoneID) => {\r\n    const nextActivePlayer = state.gameState.activePlayer === \"W\" ? \"B\" : \"W\"\r\n    const stoneCoords = stoneID !== \"None\"\r\n        ? getTileWithID(state, stoneID)?.coordinates ?? false\r\n        : [1,1]\r\n    if(stoneCoords) {\r\n        const [x, y] = stoneCoords\r\n        const modifier = getTileModifierWithCoords(state, x, y)\r\n        if(modifier !== \"Rosette\") {\r\n            return nextActivePlayer === \"W\"\r\n                ? {\r\n                    ...state,\r\n                    gameState: {\r\n                        ...incrementTurnNumber(state).gameState,\r\n                        activePlayer: nextActivePlayer\r\n                    },\r\n                }\r\n                : {\r\n                    ...state,\r\n                    gameState: {\r\n                        ...state.gameState,\r\n                        activePlayer: nextActivePlayer,\r\n                    },\r\n                }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const setTheGameType = (state, gameType) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        gameType: gameType,\r\n    },\r\n});\r\n\r\nexport const setTheWindowState = (state, windowState) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        windowState: windowState,\r\n    },\r\n});\r\n\r\nexport const setTheWhoFirst = (state, whoFirst) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        whoFirst: whoFirst,\r\n    },\r\n});\r\n\r\n\r\n","import { whiteStonePath, blackStonePath, rowLetterMap, compareCoords, calculateLandingCoords, calculateMoveDistance } from './gameConstants';\r\nimport { addToMoveLog } from './logStateFunctions';\r\nimport { advanceTurn } from './gameStateFunctions';\r\n\r\nexport const validateMove = (state, stoneID) => {\r\n    const landingCoords = calculateLandingCoords(state, stoneID) ?? false\r\n    if(landingCoords && state.gameState.rolled){\r\n        const [tx, ty] = landingCoords\r\n        const firstStoneAtTargetLocation = state.boardState[tx][ty]?.stones?.[0] ?? \"\"\r\n        return ((stoneID.charAt(0) === \"W\"\r\n                && state.gameState.activePlayer === \"W\")\r\n            || (stoneID.charAt(0) === \"B\"\r\n                && state.gameState.activePlayer === \"B\"))\r\n        && (calculateMoveDistance(state) === 0\r\n            || firstStoneAtTargetLocation.charAt(0) !== state.gameState.activePlayer\r\n            || (compareCoords(landingCoords, [0,4])\r\n                || compareCoords(landingCoords, [2,4])))\r\n        && !(compareCoords(landingCoords, [1,3])\r\n            && (state.boardState[tx][ty]?.stones?.length ?? 0) > 0)\r\n    }\r\n    return false;\r\n  }\r\n\r\nexport const getTileWithID = (state, stoneID) => (\r\n    state.boardState.flat().find((tile) => tile.stones.includes(stoneID))\r\n  );\r\n  \r\n  export const getTileModifierWithCoords = (state, x, y) => (\r\n    state.boardState[x][y].modifier\r\n  );\r\n  \r\n  export const getTileStonesWithCoords = (state, x, y) => (\r\n    state.boardState[x][y].stones\r\n  );\r\n  \r\n  export const moveStone = (prevState, stoneID, newLocation) => {\r\n      const activePlayerText = prevState.gameState.activePlayer === \"W\" ? \"White\" : \"Black\";\r\n      const loggedPrevState = (\r\n        getTileModifierWithCoords(prevState, newLocation[0], newLocation[1]) !== \"Empty\"\r\n            ? addToMoveLog(prevState, [`${activePlayerText} moved to ${\r\n                rowLetterMap[newLocation[1]] + (3 - newLocation[0])\r\n            }`])\r\n            : prevState\r\n      )\r\n      return {\r\n          ...loggedPrevState,\r\n          boardState:\r\n              stoneID === \"Error\"\r\n              ? loggedPrevState.boardState\r\n              : addInStone(\r\n                  loggedPrevState.boardState.map((row, x) => (\r\n                      row.map((tile, y) => ({\r\n                          ...tile,\r\n                          stones: tile.stones?.filter((id) => id !== stoneID) ?? [],\r\n                      }))\r\n                  )),\r\n              stoneID, newLocation),\r\n      };\r\n  };\r\n  \r\n  export const bumpStone = (prevState, stoneID, newLocation) => {\r\n    const [x, y] = newLocation\r\n    const stoneToBump = prevState.boardState[x][y]?.stones?.[0] ?? false\r\n    if(stoneToBump) {\r\n        return moveStone(\r\n            moveStone(prevState, stoneToBump,\r\n                stoneToBump.charAt(0) === 'W'\r\n                ? whiteStonePath[0]\r\n                : blackStonePath[0]\r\n            ),\r\n        stoneID, newLocation)\r\n    }\r\n    else\r\n        throw new Error(\"Stone being bumped doesnt exist\");\r\n  }\r\n  \r\n  \r\n  export const addInStone = (prevBoardState, stoneID, newLocation) => (\r\n    prevBoardState.map((row, x) => (\r\n        row.map((tile, y) => ({\r\n            ...tile,\r\n            stones: compareCoords([x,y], newLocation) ? [...tile.stones, stoneID] : tile.stones,\r\n        }))\r\n    ))\r\n  )\r\n\r\n  const moveStoneToLandingCoords = (state, stoneID) => {\r\n    const landingCoords = calculateLandingCoords(state, stoneID)\r\n    const [x, y] = landingCoords\r\n    const firstCharOfFirstStoneAtTarget = state.boardState[x][y]?.stones?.[0]?.charAt(0) ?? stoneID.charAt(0)\r\n    if(firstCharOfFirstStoneAtTarget !== stoneID.charAt(0))\r\n        return bumpStone(state, stoneID, landingCoords)\r\n    return moveStone(state, stoneID, landingCoords)\r\n};\r\n\r\nexport const moveStoneWrap = (state, stoneID) => (\r\n    advanceTurn(moveStoneToLandingCoords(state, stoneID), stoneID)    \r\n);\r\n  ","import { moveStoneWrap } from './functions/boardStateFunctions';\r\nimport { rollDice, resetRollResult } from './functions/diceStateFunctions';\r\nimport { defaultGameState } from './functions/gameConstants';\r\nimport { setTheGameType, setTheWindowState, setTheWhoFirst } from './functions/gameStateFunctions';\r\nimport { addToMoveLog } from './functions/logStateFunctions';\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"rollDice\":\r\n            return rollDice(state);\r\n        case \"resetRolled\":\r\n            return resetRollResult(state);\r\n        case \"moveStone\":\r\n            return moveStoneWrap(state, action.parameters.stoneID);\r\n        case \"logMove\":\r\n            return addToMoveLog(state, action.parameters.moveToLog);\r\n        case \"setGameType\":\r\n            return setTheGameType(state, action.parameters.gameType);\r\n        case \"setWindowState\":\r\n            return setTheWindowState(state, action.parameters.windowState);\r\n        case \"setWhoFirst\":\r\n            return setTheWhoFirst(state, action.parameters.whoFirst);\r\n        case \"resetState\":\r\n            return defaultGameState;\r\n        default:\r\n            throw new Error(\"Invalid Action Type\");\r\n    }\r\n};","import { whiteStoneIDs, blackStoneIDs, calculateMoveDistance } from './gameConstants';\r\nimport { addToMoveLog } from './logStateFunctions';\r\nimport { validateMove } from './boardStateFunctions';\r\nimport { advanceTurn } from './gameStateFunctions';\r\n\r\nexport const rollDice = (state) => {\r\n    const rollResult = Array(4).fill(0).map(() => Math.random() >= 0.5);\r\n    const testState = {\r\n        ...state,\r\n        gameState: {\r\n            ...state.gameState,\r\n            rollResult: rollResult,\r\n            moveMessage: \"\",\r\n            rolled: true,\r\n        },\r\n    }\r\n    const activePlayer = state.gameState.activePlayer\r\n    const validMoves = (activePlayer === \"W\"\r\n        ? whiteStoneIDs\r\n        : blackStoneIDs\r\n    ).filter((id) => validateMove(testState, id))\r\n    const moveDistance = calculateMoveDistance(testState);\r\n    const activePlayerText = state.gameState.activePlayer === \"W\" ? \"White\" : \"Black\";\r\n    const noValidMoveLoggedState = addToMoveLog(state, [\r\n        `${activePlayerText} rolled ${moveDistance}`, \r\n        `${activePlayerText} had no valid moves`\r\n    ]);\r\n    const rollZeroLoggedState = addToMoveLog(state, [\r\n        `${activePlayerText} rolled ${moveDistance}`\r\n    ]);\r\n    return moveDistance > 0\r\n        ? validMoves.length > 0\r\n            ? addToMoveLog(testState, [`${activePlayerText} rolled ${moveDistance}`])\r\n            : {\r\n                ...noValidMoveLoggedState,\r\n                gameState: {\r\n                    ...advanceTurn(noValidMoveLoggedState, \"None\").gameState\r\n                },\r\n            }\r\n        : {\r\n            ...rollZeroLoggedState,\r\n            gameState: {\r\n                ...advanceTurn(rollZeroLoggedState, \"None\").gameState,\r\n            },\r\n        }\r\n};\r\n\r\nexport const resetRollResult = (state) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        rollResult: [false, false, false, false],\r\n        rolled: false,\r\n    },\r\n});","import React from 'react';\r\n\r\nimport { isAITurn, aiTurn } from './functions/aiFunctions';\r\n// Import AI State\r\n\r\nimport { getTileModifierWithCoords, getTileStonesWithCoords, validateMove } from './functions/boardStateFunctions';\r\n// Import Board State\r\n\r\nimport { defaultGameState, whiteStoneIDs, blackStoneIDs, whiteStonePath, blackStonePath, rowLetterMap } from './functions/gameConstants';\r\n// Import Constants\r\n\r\nimport { reducer } from './reducer';\r\n// Import Reducer\r\n\r\nexport { isAITurn, aiTurn};\r\n// Export AI State\r\n\r\nexport { getTileModifierWithCoords, getTileStonesWithCoords, validateMove };\r\n// Export Board State\r\n\r\nexport { defaultGameState, whiteStoneIDs, blackStoneIDs, whiteStonePath, blackStonePath, rowLetterMap };\r\n// Export Constants\r\n\r\nexport { reducer };\r\n// Export Reducer\r\n\r\nexport const GameContext = React.createContext([]);\r\n// Export Context\r\n\r\n","import styled, { css } from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Circle = ({className}) =>\r\n<svg viewBox=\"0 0 512 512\" className={className}>\r\n    <g>\r\n    \t<path d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\"/>\r\n    </g>\r\n</svg>\r\n\r\nexport const Triangle = ({className}) =>\r\n<svg viewBox=\"0 0 490 490\" className={className}>\r\n\t<g>\r\n\t\t<path d=\"M490,474.459H0L245.009,15.541L490,474.459z\"/>\r\n\t</g>\r\n</svg>\r\n\r\nexport const SubTitleText = styled.h2`\r\n    font-size: 5rem;\r\n    margin: auto;\r\n    letter-spacing: 0.1em;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nexport const SubTitleTextButton = styled.h2`\r\n    font-size: 3rem;\r\n    margin: auto;\r\n    letter-spacing: 0.1em;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    color: #FFFFFF;\r\n    background-color: #7851A9;\r\n    padding: 20px 40px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport const Blur = styled.div`\r\n    z-index: 2;\r\n    position: absolute;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    backdrop-filter: blur(5px);\r\n`;\r\n\r\nexport const Window = styled.div`\r\n    z-index: 3;\r\n    position: absolute;\r\n    width: 75vw;\r\n    height: 75vh;\r\n    background-color: #373737;\r\n    transform: translate(-50%, -50%);\r\n    top: 50vh;\r\n    left: 50vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 10px;\r\n    border: 10px solid #7851A9;\r\n`;\r\nexport const WrapperLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n","import React from 'react';\r\nimport styled, { css } from \"styled-components\";\r\nimport * as g from '../../global/components';\r\nimport * as Actions from '../gameContext/actions'\r\nimport { GameContext, getTileStonesWithCoords, getTileModifierWithCoords, validateMove, rowLetterMap } from '../gameContext';\r\n\r\n\r\nconst GameBoardWrapper = styled.div`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: 50%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1vw 1vw 0 0;\r\n`;\r\n\r\nconst GameBoardCornerDot = styled.div`\r\n  width: 2vw;\r\n  height: 2vw;\r\n  margin: 10px;\r\n`\r\n\r\nconst GameBoardColumnLabel = styled.div`\r\n  width: 6vw;\r\n  height: 2vw;\r\n  font-size: 1.6vw;\r\n  margin: 10px;\r\n  color: white;\r\n  text-align: center;\r\n`\r\n\r\nconst GameBoardRowLabel = styled.div`\r\n  width: 2vw;\r\n  height: 6vw;\r\n  font-size: 1.6vw;\r\n  margin: 10px;\r\n  color: white;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst GameBoardRow = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst GameBoardColumn = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst GameTile = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 6vw;\r\n  height: 6vw;\r\n  margin: 10px;\r\n  color: white;\r\n  font-size: 2.5rem;\r\n  background-color: #cccccc;\r\n  ${props => props.modifier && css`\r\n    background-color: ${\r\n      props.modifier === \"Rosette\" ?\r\n        \"#7851A9\" :\r\n        props.modifier === \"Empty\" ?\r\n          \"transparent\" :\r\n          \"#aaaaaa\"\r\n     }\r\n  `}\r\n`;\r\n\r\n\r\n/*\r\n<div className='scalable'>\r\n    <img className='drop-shadow' id={ planet.name } src={ planet.image } alt={ planet.name } />\r\n</div>\r\n*/\r\n\r\n\r\nconst GameTileText = styled.div`\r\n    color: #7851A9;\r\n    font-size: 2.5rem;\r\n    pointer-events: none;\r\n    user-select: none;\r\n    line-height: 0em;\r\n    z-index: 3;\r\n    transform: translate(-50%, -50%);\r\n    top: 50%;\r\n    left: 50%;\r\n    position: absolute;\r\n    top: calc(50% - 2px);\r\n`;\r\n\r\nconst GameStone = styled(g.Circle)`\r\n    width: 75%;\r\n    height: 75%;\r\n    z-index: 2;\r\n    & path {\r\n        transition: all 0.2s;\r\n        fill: ${props => props.color && css`\r\n            ${props.color === \"W\"\r\n                ? \"#FFFFFF\"\r\n                : \"#000000\"\r\n            }\r\n        `};\r\n    }\r\n    &:hover {\r\n        width: 80%;\r\n        height: 80%;\r\n    }\r\n`;\r\n\r\n\r\nexport const Board = ({}) => {\r\n\r\n    const [gameContextState, dispatch] = React.useContext(GameContext);\r\n\r\n    return <>\r\n        <GameBoardWrapper>\r\n          <GameBoardRow>\r\n            <GameBoardColumn key={`Labelcolumn`}>\r\n              <GameBoardRowLabel key=\"Label3\">3</GameBoardRowLabel>\r\n              <GameBoardRowLabel key=\"Label2\">2</GameBoardRowLabel>\r\n              <GameBoardRowLabel key=\"Label1\">1</GameBoardRowLabel>\r\n              <GameBoardCornerDot/>\r\n            </GameBoardColumn>\r\n            {\r\n              Array(7).fill(0).map((_, rowIndex) =>\r\n                <GameBoardColumn key={`column${rowIndex}`}>\r\n                  {\r\n                    Array(3).fill(0).map((_, columnIndex) => {\r\n                      const modifier = getTileModifierWithCoords(gameContextState, columnIndex, rowIndex) ?? \"\";\r\n                      const stones = getTileStonesWithCoords(gameContextState, columnIndex, rowIndex) ?? [];\r\n                      return <GameTile\r\n                          onClick={() => {\r\n                              if(stones[0] && validateMove(gameContextState, stones[0])) {\r\n                                  dispatch(Actions.moveStone(stones[0]))\r\n                                  dispatch(Actions.resetRolled())\r\n                              }\r\n                          }}\r\n                          key={`Tile[${columnIndex},${rowIndex}]`}\r\n                          modifier={modifier}\r\n                        >\r\n                          {stones.length > 0 ? <GameStone color={stones[0].charAt(0)}/> : null}\r\n                          <GameTileText>\r\n                              {stones.length > 0 ? stones.length : \"\"}\r\n                          </GameTileText>\r\n                        </GameTile>\r\n                    })\r\n                  }\r\n                  <GameBoardColumnLabel key={`${rowIndex}CLabel`}>{ rowLetterMap?.[rowIndex] ?? \"\"}</GameBoardColumnLabel>\r\n                </GameBoardColumn>\r\n              )\r\n            }\r\n          </GameBoardRow>\r\n        </GameBoardWrapper>\r\n    </>\r\n};\r\n","export const HelpIcon = (props) => (\r\n    <svg {...props} viewBox=\"0 0 24 24\" fill=\"#FFFFFF\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\"/>\r\n    </svg>\r\n)","export const SettingsIcon = (props) => (\r\n    <svg {...props} viewBox=\"0 0 24 24\" fill=\"#FFFFFF\">\r\n        <g>\r\n            <path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\r\n        </g>\r\n    </svg>\r\n);","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport * as Actions from '../gameContext/actions'\r\nimport { GameContext } from '../gameContext';\r\nimport { HelpIcon } from './assets/helpIcon';\r\nimport { SettingsIcon } from './assets/settingsIcon';\r\n\r\n\r\nconst LogWrap = styled.div` \r\n    position : absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transform: translate(-50%, -50%);\r\n    top: 50vh;\r\n    left: 11.5vw;\r\n    width: calc(23vw - 50px);\r\n    height: calc(100vh - 50px);\r\n    background-color: #aaaaaa; \r\n`;\r\n\r\nconst TurnMoveTracker = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 10vh;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    color: ${props => props.color};\r\n    background-color: #7851A9;\r\n    border-bottom: 2px solid #000000;\r\n`;\r\n\r\nconst MovesWrap = styled.div` \r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    height: calc(90vh - 50px);\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n`;\r\n\r\nconst IconWrap = styled.div`\r\n    height: 6vh;\r\n    width: 6vh;\r\n    padding: 0 20px;\r\n`;\r\n\r\nconst LogEntry = styled.div`\r\n    width: 100%;\r\n    font-size: 1.75rem;\r\n    letter-spacing: 0.05em;\r\n    margin-left: 1vw;\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst SwapDirectionWrap = styled.div`\r\n    padding: 10px 0;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const Line = styled.div`\r\n    width: 80%;\r\n    margin: 20px auto;\r\n    text-align: center;\r\n    border-bottom: solid 2px #7851A9;\r\n`;\r\n\r\nexport const Log = ({}) => {\r\n\r\n  const [gameContextState, dispatch] = React.useContext(GameContext);\r\n\r\n  return <LogWrap>\r\n      <TurnMoveTracker color={gameContextState.gameState.activePlayer === \"W\" ? \"#FFFFFF\" : \"#000000\"}>\r\n          <IconWrap>\r\n              <HelpIcon onClick={() => dispatch(Actions.setWindowState(\"Info\"))}/>\r\n          </IconWrap>\r\n              Turn {gameContextState.gameState.turnNumber}\r\n          <IconWrap>\r\n              <SettingsIcon onClick={() => dispatch(Actions.setWindowState(\"Settings\"))}/>\r\n          </IconWrap>\r\n      </TurnMoveTracker>\r\n          <MovesWrap>\r\n              <SwapDirectionWrap>\r\n              {\r\n                  (gameContextState?.gameState?.moveLog ?? []).map((message, i) => (\r\n                      message !== \"-\" \r\n                      ? <LogEntry key={`Message-${i}`} color={\r\n                            message.substring(0, 5) === \"White\"\r\n                            ? \"#FFFFFF\"\r\n                            : message.substring(0, 5) === \"Black\"\r\n                            ? \"#000000\"\r\n                            : \"#7851A9\"\r\n                        }>\r\n                          {message}\r\n                      </LogEntry>\r\n                      : <Line key={`Line-${i}`}/>\r\n                  ))\r\n              }\r\n              </SwapDirectionWrap>\r\n          </MovesWrap>\r\n  </LogWrap>\r\n};\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport * as g from '../../global/components';\r\nimport * as Actions from '../gameContext/actions'\r\nimport { GameContext } from '../gameContext';\r\n\r\n\r\nconst DiceRow = styled.div`\r\n    position: absolute;\r\n    transform: translate(-50%, 0);\r\n    bottom: 5vh;\r\n    left: 50vw;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Die = styled(g.Triangle)`\r\n    height: 100px;\r\n    width: 100px;\r\n    margin: 10px;\r\n    & path {\r\n        transition: all 0.2s;\r\n        fill: ${props => props.dot ? \"#000000\" : \"#FFFFFF\"}\r\n    }\r\n`;\r\n\r\nconst RollButton = styled.div`\r\n    position: relative;\r\n    margin-left: 30px;\r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 2px;\r\n    background-color: #7851A9;\r\n`;\r\n\r\nconst RollText = styled.div`\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    transform: translate(-50%, -50%);\r\n    top: 50%;\r\n    left: 50%;\r\n    position: absolute;\r\n\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n     -khtml-user-select: none;\r\n       -moz-user-select: none;\r\n        -ms-user-select: none;\r\n            user-select: none;\r\n`;\r\n\r\nexport const Dice = ({}) => {\r\n\r\n    const [gameContextState, dispatch] = React.useContext(GameContext);\r\n    \r\n    return (\r\n        <DiceRow>\r\n            {\r\n                Array(4).fill(0).map((e, i) =>\r\n                    <Die\r\n                        key={i}\r\n                        dot={gameContextState.gameState.rollResult[i]}\r\n                    />\r\n                )\r\n            }\r\n            {\r\n                !gameContextState.gameState.rolled &&\r\n                <RollButton onClick={() => dispatch(Actions.rollDice())}>\r\n                    <RollText>\r\n                        Roll\r\n                    </RollText>\r\n                </RollButton>\r\n            }\r\n        </DiceRow>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport * as g from '../../global/components';\r\nimport * as Actions from '../gameContext/actions';\r\nimport { GameContext } from '../gameContext';\r\n\r\nexport const WinScreen = ({}) => {\r\n    \r\n    const [gameContextState, dispatch] = React.useContext(GameContext);\r\n\r\n    return <>\r\n        <g.Blur/> \r\n        <g.Window>\r\n            <g.SubTitleText>\r\n                {\r\n                    gameContextState.boardState[0][4].length >= 6\r\n                    ? \"White Wins!\"\r\n                    : \"Black Wins!\"\r\n                }\r\n            </g.SubTitleText>\r\n            <g.SubTitleTextButton onClick={() => dispatch(Actions.resetState())}>\r\n                Play Again\r\n            </g.SubTitleTextButton>\r\n        </g.Window>\r\n    </>\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Actions from '../gameContext/actions'\r\nimport { GameContext } from '../gameContext';\r\n\r\nconst SubTitleText = styled.h2`\r\n    font-size: 3rem;\r\n    letter-spacing: 0.1em;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst SubTitleTextButton = styled.h2`\r\n    font-size: 3rem;\r\n    letter-spacing: 0.1em;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    color: #FFFFFF;\r\n    width: 50%;\r\n    background-color: #7851A9;\r\n    padding: 20px 40px;\r\n    border-radius: 10px;\r\n`;\r\n\r\n\r\nconst Blur = styled.div`\r\n    z-index: 2;\r\n    position: absolute;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    backdrop-filter: blur(5px);\r\n`;\r\n\r\nconst Window = styled.div`\r\n    z-index: 3;\r\n    position: absolute;\r\n    width: 75vw;\r\n    height: 75vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    background-color: #373737;\r\n    transform: translate(-50%, -50%);\r\n    top: 50vh;\r\n    left: 50vw;\r\n    border-radius: 10px;\r\n    border: 10px solid #7851A9;\r\n`;\r\n\r\nconst InfoWindow = ({}) => {\r\n\r\n    const [_, dispatch] = React.useContext(GameContext);\r\n\r\n    return <>\r\n        <Blur onClick={() => dispatch(Actions.setWindowState(\"\"))}/> \r\n        <Window>\r\n            <SubTitleText>\r\n                How to play\r\n            </SubTitleText>\r\n        </Window>\r\n    </>\r\n};\r\n\r\nconst SettingsWindow = ({}) => {\r\n\r\n    const [_, dispatch] = React.useContext(GameContext);\r\n\r\n    return  <>\r\n        <Blur onClick={() => dispatch(Actions.setWindowState(\"\"))}/> \r\n        <Window>\r\n            <SubTitleText>\r\n                Settings\r\n            </SubTitleText>\r\n            <SubTitleTextButton onClick={() => { \r\n                dispatch(Actions.resetState());\r\n                dispatch(Actions.setWindowState(\"\"));\r\n            }}>\r\n                Reset Game\r\n            </SubTitleTextButton>\r\n        </Window>\r\n    </>\r\n};\r\n\r\nexport const PopupWindows = ({}) => {\r\n\r\n    const [gameContextState, _] = React.useContext(GameContext);\r\n\r\n    return <>\r\n        {\r\n            gameContextState.gameState.windowState === \"Info\" && <InfoWindow/>\r\n        }\r\n        {\r\n            gameContextState.gameState.windowState === \"Settings\" && <SettingsWindow/>\r\n        }\r\n    </>\r\n};\r\n","import React from 'react';\r\nimport * as g from '../../global/components';\r\nimport * as Actions from '../gameContext/actions'\r\nimport { GameContext } from '../gameContext';\r\n\r\n\r\nexport const PreGameMenu = ({}) => {\r\n\r\n    const [_, dispatch] = React.useContext(GameContext);\r\n    const first = Math.random() >= 0.5 ? \"Player 1\" : \"Player 2\" \r\n\r\n    return <>\r\n        <g.Blur/> \r\n        <g.Window>\r\n            <g.SubTitleTextButton key=\"pvpButton\" onClick={() => {\r\n                dispatch(Actions.setGameType(\"lpvp\"))\r\n                dispatch(Actions.setWhoFirst(first))\r\n            }}>\r\n                Local Player vs Player \r\n            </g.SubTitleTextButton>\r\n            <g.SubTitleTextButton key=\"pvmButton\" onClick={() => {\r\n                dispatch(Actions.setGameType(\"pvm\"))\r\n                dispatch(Actions.setWhoFirst(first))\r\n            }}>\r\n                Player vs A.I.\r\n            </g.SubTitleTextButton>\r\n        </g.Window>\r\n    </>\r\n};\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { GameContext } from '../gameContext';\r\n\r\nconst TitleTextWrap = styled.div`\r\n    position : absolute;\r\n    transform: translate(-50%, 0);\r\n    top: 3vh;\r\n    left: 50vw;\r\n    margin: 0;\r\n    text-align: center;\r\n    color: #7851A9;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    margin: 0;\r\n    font-size: 4rem;\r\n    padding-bottom: 20px;\r\n    letter-spacing: 0.1em;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n    margin: 0;\r\n    font-size: 3rem;\r\n    letter-spacing: 0.1em;\r\n    font-weight: 700;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nexport const FloatingText = ({}) => {\r\n\r\n    const [gameContextState, _] = React.useContext(GameContext);\r\n\r\n    return <TitleTextWrap>\r\n        <H1>Game of Twenty Squares Beta</H1>\r\n        { gameContextState.gameState.gameType === \"lpvp\" && <H2>Player vs Player</H2> }\r\n        { gameContextState.gameState.gameType === \"pvm\" && <H2>Player vs AI</H2> }\r\n    </TitleTextWrap>\r\n};\r\n","import React from 'react';\r\nimport { GameContext, reducer, defaultGameState, isAITurn, aiTurn } from './gameContext';\r\n\r\nimport { Board } from './board';\r\nimport { Log } from './log';\r\nimport { Dice } from './dice';\r\nimport { WinScreen } from './winScreen';\r\nimport { PopupWindows } from './popupWindows';\r\nimport { PreGameMenu } from './preGameMenu';\r\nimport { FloatingText } from './floatingText';\r\n\r\nconst didSomeoneWin = (state) => (\r\n    state.boardState[0][4].stones.length >= 6 \r\n    || state.boardState[2][4].stones.length >= 6\r\n)\r\n\r\nexport const Game = ({}) => {\r\n\r\n    const innerContext = React.useReducer(reducer, defaultGameState);\r\n    const [gameContextState, dispatch] = innerContext;\r\n\r\n    React.useEffect(() => {\r\n        if(isAITurn(gameContextState)){\r\n            aiTurn(gameContextState, dispatch);\r\n        }\r\n    }, [gameContextState]);\r\n\r\n    return <>\r\n        {/*console.log(gameContextState)*/}\r\n        <GameContext.Provider value={innerContext}>\r\n            {\r\n                gameContextState.gameState.gameType === \"\"\r\n                ? <PreGameMenu/>\r\n                : !didSomeoneWin(gameContextState) \r\n                    ? <>\r\n                        <Log/>\r\n                        <Dice/>\r\n                        <Board/>\r\n                    </>\r\n                    : <WinScreen/>\r\n            }\r\n            <FloatingText/>\r\n            <PopupWindows/>\r\n        </GameContext.Provider>\r\n    </>\r\n}\r\n","import * as Actions from '../actions';\r\nimport { validateMove, getTileModifierWithCoords, getTileStonesWithCoords } from './boardStateFunctions';\r\nimport { whiteStoneIDs, blackStoneIDs, whiteStonePath, blackStonePath, compareCoords, calculateLandingCoords } from './gameConstants';\r\n\r\nexport const isAITurn = (state) => (\r\n    state.gameState.gameType === \"pvm\"\r\n    && (\r\n        state.gameState.whoFirst === \"Player 2\"\r\n            ? state.gameState.activePlayer === \"W\"\r\n            : state.gameState.activePlayer === \"B\"\r\n    )\r\n  );\r\n\r\nexport const aiTurn = (state, dispatch) => {\r\n\r\n    if (!state.gameState.rolled) {\r\n        dispatch(Actions.rollDice());\r\n    }\r\n\r\n    const aiStones = state.gameState.whoFirst === \"Player 2\" ? whiteStoneIDs : blackStoneIDs;\r\n    const aiPath = state.gameState.whoFirst === \"Player 2\" ? whiteStonePath : blackStonePath;\r\n    const validStonesToMove = aiStones.filter((stoneID) => validateMove(state, stoneID));\r\n\r\n    if (validStonesToMove.length > 0) {\r\n        const strengthOfMove = validStonesToMove.map((stoneID) => {\r\n            const landingCoords = calculateLandingCoords(state, stoneID);\r\n            const [x, y] = landingCoords;\r\n            const strengthValue = (\r\n                    (\r\n                        (getTileStonesWithCoords(state, x, y)?.length ?? 0) > 0 \r\n                        && (getTileModifierWithCoords(state, x, y) ?? \"\") !== \"Empty\" \r\n                            ? 30 \r\n                            : 0 \r\n                    )\r\n                + \r\n                    (\r\n                        (getTileModifierWithCoords(state, x, y) ?? \"\") === \"Rosette\" \r\n                            ? 15\r\n                            : 0\r\n                    )\r\n                + \r\n                    (\r\n                        aiPath.reduce((accumulator, pathCoords, index) => (\r\n                            compareCoords(pathCoords, landingCoords)\r\n                                ? index+1\r\n                                : accumulator\r\n                        ), 0)\r\n                    )\r\n            );\r\n            return ({\r\n                stoneID: stoneID,\r\n                strength: strengthValue,\r\n            });\r\n        });\r\n\r\n\r\n        const sortedStrengthOfMove = strengthOfMove.sort((firstMove, secondMove)=> secondMove.strength - firstMove.strength)\r\n        console.log(sortedStrengthOfMove);\r\n        const bestStoneToMove = sortedStrengthOfMove[0].stoneID;\r\n        dispatch(Actions.moveStone(bestStoneToMove));\r\n        dispatch(Actions.resetRolled());\r\n    }\r\n};","import { Route, Switch, Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\nimport './global/styles/App.css';\r\n\r\nimport { Game }   from './game';\r\n\r\nfunction App() {\r\n\r\n    return <Game/>\r\n}\r\n\r\n/* \r\n\r\n<Route path=\"/\" exact={true}>\r\n    <Redirect to=\"/game\"/>\r\n</Route>\r\n<Route path=\"/game\">\r\n    <Game/>\r\n</Route>\r\n\r\n*/\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './global/styles/App.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n/*\r\n  <BrowserRouter>\r\n      <App />\r\n  </BrowserRouter>\r\n*/\r\n\r\n"],"sourceRoot":""}