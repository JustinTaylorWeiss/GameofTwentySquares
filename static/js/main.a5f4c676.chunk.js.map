{"version":3,"sources":["game/gameContext/actions.js","game/gameContext/functions/gameConstants.js","game/gameContext/functions/logStateFunctions.js","game/gameContext/functions/gameStateFunctions.js","game/gameContext/functions/boardStateFunctions.js","game/gameContext/reducer.js","game/gameContext/functions/diceStateFunctions.js","game/gameContext/index.js","global/components/index.js","game/board/component.jsx","game/log/assets/helpIcon.jsx","game/log/assets/settingsIcon.jsx","game/log/component.jsx","game/log/assets/menuIcon.jsx","game/log/assets/arrow.jsx","game/dice/component.jsx","game/winScreen/component.jsx","game/popupWindows/component.jsx","game/popupWindows/assets/arrowBoard.jsx","game/preGameMenu/component.jsx","game/titleHead/component.jsx","game/component.jsx","game/gameContext/functions/aiFunctions.js","App.js","index.js"],"names":["moveStone","stoneID","type","parameters","setGameType","gameType","setWindowState","windowState","setWhoFirst","whoFirst","compareCoords","x","y","calculateMoveDistance","state","gameState","rollResult","filter","r","length","calculateLandingCoords","tileWithID","boardState","flat","find","tile","stones","includes","charAt","whiteStonePath","findIndex","c","coordinates","blackStonePath","Error","rowLetterMap","whiteStoneIDs","blackStoneIDs","defaultGameState","turnNumber","activePlayer","rolled","moveLog","modifier","addToMoveLog","moveToLogArr","incrementTurnNumber","advanceTurn","nextActivePlayer","stoneCoords","getTileWithID","getTileModifierWithCoords","validateMove","landingCoords","tx","ty","firstStoneAtTargetLocation","getTileStonesWithCoords","prevState","newLocation","activePlayerText","loggedPrevState","addInStone","map","row","id","prevBoardState","moveStoneToLandingCoords","stoneToBump","bumpStone","reducer","action","Array","fill","Math","random","testState","moveMessage","validMoves","moveDistance","noValidMoveLoggedState","rollZeroLoggedState","rollDice","resetRollResult","moveStoneWrap","moveToLog","setTheGameType","setTheWindowState","setTheWhoFirst","GameContext","React","createContext","SubTitleText","styled","h2","MenuH2","SubTitleTextButton","Blur","div","Window","GameBoardGrid","Link","GameBoardLabel","props","gridarea","GameTile","StoneTextWrap","GameTileText","GameStone","viewBox","d","color","Board","useContext","gameContextState","dispatch","_","rowIndex","columnIndex","onClick","Actions","HelpIcon","SettingsIcon","TurnMoveTracker","MovesWrap","IconWrap","LogEntry","MiniMenuWrap","SwapDirectionWrap","StyledMenuIcon","Line","ArrowWrap","StyledArrow","LogButtonsMiniGroup","HamburgerGrid","HamburgerLog","updateHamburgerState","message","i","substring","Log","useState","hamburgerState","past1x1","useMediaQuery","query","minWidth","maxWidth","DiceRow","Die","RollButton","RollText","Dice","e","WinScreen","InstructionWrap","ListWrap","StyledArrowBoard","className","InfoWindow","SettingsWindow","PopupWindows","PreGameMenu","first","TitleTextWrap","H1","h1","H2","TitleHead","UIGrid","Game","innerContext","useReducer","useEffect","aiStones","aiPath","validStonesToMove","sortedStrengthOfMove","strength","reduce","accumulator","pathCoords","index","sort","firstMove","secondMove","console","log","bestStoneToMove","aiTurn","Provider","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAGaA,EAAY,SAACC,GAAD,MAAc,CACnCC,KAAM,YACNC,WAAY,CACRF,QAASA,KAuBJG,EAAc,SAACC,GAAD,MAAe,CACtCH,KAAM,cACNC,WAAY,CACRE,SAAUA,KAILC,EAAiB,SAACC,GAAD,MAAkB,CAC5CL,KAAM,iBACNC,WAAY,CACRI,YAAaA,KAIRC,EAAc,SAACC,GAAD,MAAe,CACtCP,KAAM,cACNC,WAAY,CACRM,SAAUA,K,cC3CLC,EAAgB,SAACC,EAAGC,GAAJ,OAC3BD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAGjBC,EAAwB,SAACC,GAAD,OACnCA,EAAMC,UAAUC,WAAWC,QAAO,SAACC,GAAD,OAAOA,KAAGC,QAGjCC,EAAyB,SAACN,EAAOb,GAC5C,IAAMoB,EAAaP,EAAMQ,WAAWC,OAAOC,MAAK,SAACC,GAAU,IAAD,IAIxD,OAHKA,EAAKC,OAGV,iBAAOD,QAAP,IAAOA,GAAP,UAAOA,EAAMC,cAAb,aAAO,EAAcC,SAAS1B,UAA9B,YAEF,GAAyB,MAAtBA,EAAQ2B,OAAO,GACd,OAAOC,GACHA,GAAeC,WAAU,SAACC,GAAD,OACrBrB,EAAcqB,EAAGV,EAAWW,gBAAgBnB,EAAsBC,IAEzE,GAAyB,MAAtBb,EAAQ2B,OAAO,GACnB,OAAOK,GACHA,GAAeH,WAAU,SAACC,GAAD,OACrBrB,EAAcqB,EAAGV,EAAWW,gBAAgBnB,EAAsBC,IAG1E,MAAM,IAAIoB,MAAM,kCAKTC,GAAe,CAC1B,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAGMC,GAAgB,CACzB,KAAM,KAAM,KACZ,KAAM,KAAM,MAGHC,GAAgB,CAC3B,KAAM,KAAM,KACZ,KAAM,KAAM,MAGDR,GAAiB,CAC5B,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,IAGCI,GAAiB,CAC5B,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,GACV,CAAC,EAAE,GAAI,CAAC,EAAE,IAGCK,GAAmB,CAC9BvB,UAAW,CACPN,SAAU,GACV8B,WAAY,EACZC,aAAc,IACdxB,WAAY,EAAC,GAAO,GAAO,GAAO,GAClCyB,QAAQ,EACRpC,SAAU,GACVE,YAAa,GACbmC,QAAS,CAAC,aAAc,yBAA0B,MAEtDpB,WAAY,CACV,CACE,CACEqB,SAAU,UACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,QACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,OAEpC,CACEiB,SAAU,QACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,UACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,KAGZ,CACE,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,UACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,KAGZ,CACE,CACEiB,SAAU,UACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,QACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,OAEpC,CACEiB,SAAU,QACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,UACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,IAEV,CACEiB,SAAU,OACVX,YAAa,CAAC,EAAE,GAChBN,OAAQ,OC/MHkB,GAAe,SAAC9B,EAAO+B,GAAR,mBAAC,eACtB/B,GADqB,IAExBC,UAAU,2BACHD,EAAMC,WADJ,IAEL2B,QAAQ,GAAD,mBAAM5B,EAAMC,UAAU2B,SAAtB,YAAkCG,SCH3CC,GAAsB,SAAChC,GAAD,mBAAC,eACtBA,GADqB,IAExBC,UAAU,2BACHD,EAAMC,WADJ,IAELwB,WAAYzB,EAAMC,UAAUwB,WAAa,OAIpCQ,GAAc,SAACjC,EAAOb,GAAa,IAAD,IACrC+C,EAAoD,MAAjClC,EAAMC,UAAUyB,aAAuB,IAAM,IAChES,EAA0B,SAAZhD,EAAA,oBACdiD,GAAcpC,EAAOb,UADP,aACd,EAA+B+B,mBADjB,SAEd,CAAC,EAAE,GACT,GAAGiB,EAAa,CAAC,IAAD,cACGA,EADH,GACLtC,EADK,KACFC,EADE,KAGZ,GAAgB,YADCuC,GAA0BrC,EAAOH,EAAGC,GAEjD,MAA4B,MAArBoC,EAAA,2BAEIlC,GAFJ,IAGCC,UAAU,2BACH+B,GAAoBhC,GAAOC,WADzB,IAELyB,aAAcQ,MALnB,2BASIlC,GATJ,IAUCC,UAAU,2BACHD,EAAMC,WADJ,IAELyB,aAAcQ,MAKlC,OAAOlC,GChCEsC,GAAe,SAACtC,EAAOb,GAAa,IAAD,EACtCoD,EAAa,UAAGjC,EAAuBN,EAAOb,UAAjC,SACnB,GAAGoD,GAAiBvC,EAAMC,UAAU0B,OAAO,CAAC,IAAD,0BACtBY,EADsB,GAChCC,EADgC,KAC5BC,EAD4B,KAEjCC,EAA0B,oBAAG1C,EAAMQ,WAAWgC,GAAIC,UAAxB,iBAAG,EAA0B7B,cAA7B,aAAG,EAAmC,UAAtC,QAA4C,GAC5E,OAA+B,MAAtBzB,EAAQ2B,OAAO,IACoB,MAAjCd,EAAMC,UAAUyB,cACG,MAAtBvC,EAAQ2B,OAAO,IACqB,MAAjCd,EAAMC,UAAUyB,gBACU,IAAjC3B,EAAsBC,IACnB0C,EAA2B5B,OAAO,KAAOd,EAAMC,UAAUyB,cACxD9B,EAAc2C,EAAe,CAAC,EAAE,KAC7B3C,EAAc2C,EAAe,CAAC,EAAE,QACtC3C,EAAc2C,EAAe,CAAC,EAAE,MAC9B,oBAACvC,EAAMQ,WAAWgC,GAAIC,UAAtB,iBAAC,EAA0B7B,cAA3B,aAAC,EAAkCP,cAAnC,QAA6C,GAAK,GAE7D,OAAO,GAGE+B,GAAgB,SAACpC,EAAOb,GAAR,OACzBa,EAAMQ,WAAWC,OAAOC,MAAK,SAACC,GAAD,OAAUA,EAAKC,OAAOC,SAAS1B,OAGjDkD,GAA4B,SAACrC,EAAOH,EAAGC,GAAX,OACvCE,EAAMQ,WAAWX,GAAGC,GAAG+B,UAGZc,GAA0B,SAAC3C,EAAOH,EAAGC,GAAX,OACrCE,EAAMQ,WAAWX,GAAGC,GAAGc,QAGZ1B,GAAY,SAAC0D,EAAWzD,EAAS0D,GAC1C,IAAMC,EAAwD,MAArCF,EAAU3C,UAAUyB,aAAuB,QAAU,QACxEqB,EACqE,UAAzEV,GAA0BO,EAAWC,EAAY,GAAIA,EAAY,IAC3Df,GAAac,EAAW,CAAC,GAAD,OAAIE,EAAJ,qBACtBzB,GAAawB,EAAY,KAAO,EAAIA,EAAY,OAElDD,EAER,OAAO,2BACAG,GADP,IAEIvC,WACgB,UAAZrB,EACE4D,EAAgBvC,WAChBwC,GACED,EAAgBvC,WAAWyC,KAAI,SAACC,EAAKrD,GAAN,OAC3BqD,EAAID,KAAI,SAACtC,EAAMb,GAAP,2BAAC,eACFa,GADC,IAEJC,OAAM,oBAAED,EAAKC,cAAP,aAAE,EAAaT,QAAO,SAACgD,GAAD,OAAQA,IAAOhE,YAArC,QAAiD,WAGnEA,EAAS0D,MAqBRG,GAAa,SAACI,EAAgBjE,EAAS0D,GAA1B,OACxBO,EAAeH,KAAI,SAACC,EAAKrD,GAAN,OACfqD,EAAID,KAAI,SAACtC,EAAMb,GAAP,mBAAC,eACFa,GADC,IAEJC,OAAQhB,EAAc,CAACC,EAAEC,GAAI+C,GAArB,sBAAwClC,EAAKC,QAA7C,CAAqDzB,IAAWwB,EAAKC,gBAKjFyC,GAA2B,SAACrD,EAAOb,GAAa,IAAD,QAC7CoD,EAAgBjC,EAAuBN,EAAOb,GADD,cAEpCoD,EAFoC,GAE5C1C,EAF4C,KAEzCC,EAFyC,KAInD,OADmC,oBAAGE,EAAMQ,WAAWX,GAAGC,UAAvB,iBAAG,EAAwBc,cAA3B,iBAAG,EAAiC,UAApC,aAAG,EAAqCE,OAAO,UAA/C,QAAqD3B,EAAQ2B,OAAO,MAClE3B,EAAQ2B,OAAO,GA9B7B,SAAC8B,EAAWzD,EAAS0D,GAAiB,IAAD,oBAC7CA,EAD6C,GACrDhD,EADqD,KAClDC,EADkD,KAEtDwD,EAAW,oBAAGV,EAAUpC,WAAWX,GAAGC,UAA3B,iBAAG,EAA4Bc,cAA/B,aAAG,EAAqC,UAAxC,SACjB,GAAG0C,EACC,OAAOpE,GACHA,GAAU0D,EAAWU,EACS,MAA1BA,EAAYxC,OAAO,GACjBC,GAAe,GACfI,GAAe,IAEzBhC,EAAS0D,GAGT,MAAM,IAAIzB,MAAM,mCAkBTmC,CAAUvD,EAAOb,EAASoD,GAC9BrD,GAAUc,EAAOb,EAASoD,ICrFxBiB,GAAU,SAACxD,EAAOyD,GAC3B,OAAQA,EAAOrE,MACX,IAAK,WACD,OCLY,SAACY,GACrB,IAAME,EAAawD,MAAM,GAAGC,KAAK,GAAGV,KAAI,kBAAMW,KAAKC,UAAY,MACzDC,EAAS,2BACR9D,GADQ,IAEXC,UAAU,2BACHD,EAAMC,WADJ,IAELC,WAAYA,EACZ6D,YAAa,GACbpC,QAAQ,MAIVqC,GAA+B,MADhBhE,EAAMC,UAAUyB,aAE/BJ,GACAC,IACJpB,QAAO,SAACgD,GAAD,OAAQb,GAAawB,EAAWX,MACnCc,EAAelE,EAAsB+D,GACrChB,EAAoD,MAAjC9C,EAAMC,UAAUyB,aAAuB,QAAU,QACpEwC,EAAyBpC,GAAa9B,EAAO,CAAC,GAAD,OAC5C8C,EAD4C,mBACjBmB,GADiB,UAE5CnB,EAF4C,yBAI7CqB,EAAsBrC,GAAa9B,EAAO,CAAC,GAAD,OACzC8C,EADyC,mBACdmB,KAElC,OAAOA,EAAe,EAChBD,EAAW3D,OAAS,EAChByB,GAAagC,EAAW,CAAC,GAAD,OAAIhB,EAAJ,mBAA+BmB,KAD3D,2BAGSC,GAHT,IAIMjE,UAAU,eACHgC,GAAYiC,EAAwB,QAAQjE,aANxD,2BAUIkE,GAVJ,IAWClE,UAAU,eACHgC,GAAYkC,EAAqB,QAAQlE,aDhCzCmE,CAASpE,GACpB,IAAK,cACD,OCmCmB,SAACA,GAAD,mBAAC,eACzBA,GADwB,IAE3BC,UAAU,2BACHD,EAAMC,WADJ,IAELC,WAAY,EAAC,GAAO,GAAO,GAAO,GAClCyB,QAAQ,MDxCG0C,CAAgBrE,GAC3B,IAAK,YACD,ODiFiB,SAACA,EAAOb,GAAR,OACzB8C,GAAYoB,GAAyBrD,EAAOb,GAAUA,GClFvCmF,CAActE,EAAOyD,EAAOpE,WAAWF,SAClD,IAAK,UACD,OAAO2C,GAAa9B,EAAOyD,EAAOpE,WAAWkF,WACjD,IAAK,cACD,OFqBkB,SAACvE,EAAOT,GAAR,mBAAC,eACxBS,GADuB,IAE1BC,UAAU,2BACHD,EAAMC,WADJ,IAELV,SAAUA,MEzBCiF,CAAexE,EAAOyD,EAAOpE,WAAWE,UACnD,IAAK,iBACD,OF2BqB,SAACS,EAAOP,GAAR,mBAAC,eAC3BO,GAD0B,IAE7BC,UAAU,2BACHD,EAAMC,WADJ,IAELR,YAAaA,ME/BFgF,CAAkBzE,EAAOyD,EAAOpE,WAAWI,aACtD,IAAK,cACD,OFiCkB,SAACO,EAAOL,GAAR,mBAAC,eACxBK,GADuB,IAE1BC,UAAU,2BACHD,EAAMC,WADJ,IAELN,SAAUA,MErCC+E,CAAe1E,EAAOyD,EAAOpE,WAAWM,UACnD,IAAK,aACD,OAAO6B,GACX,QACI,MAAM,IAAIJ,MAAM,yBEAfuD,GAAcC,IAAMC,cAAc,I,iBCTlCC,GAAeC,IAAOC,GAAV,sKASZC,GAASF,IAAOC,GAAV,kUAcNE,GAAqBH,IAAOC,GAAV,mjBAyBlBG,GAAOJ,IAAOK,IAAV,yKAUJC,GAASN,IAAOK,IAAV,uXCpEbE,IDqFqBP,YAAOQ,KAAPR,CAAH,sDCrFFA,IAAOK,IAAV,mkCAyCbI,GAAiBT,IAAOK,IAAV,mNAKL,SAAAK,GAAK,OAAIA,EAAMC,YAMxBC,GAAWZ,IAAOK,IAAV,2NAQC,SAAAK,GAAK,OAAIA,EAAMC,YACR,SAAAD,GAAK,MAAuB,YAAnBA,EAAM5D,SAC/B,UACmB,UAAnB4D,EAAM5D,SACJ,cACA,aAIF+D,GAAgBb,IAAOK,IAAV,qJAUbS,GAAed,IAAOK,IAAV,kZAkBZU,GAAYf,aDrGI,SAACU,GAAD,OACtB,gDAASA,GAAT,IAAgBM,QAAQ,cAAxB,SACI,6BACC,uBAAMC,EAAE,gGCkGKjB,CAAH,+KAOH,SAAAU,GAAK,MAAoB,MAAhBA,EAAMQ,MACnB,UACA,aAMKC,GAAQ,SAAC,GAAQ,qBAEWtB,IAAMuB,WAAWxB,IAF7B,mBAElByB,EAFkB,KAEAC,EAFA,KAIzB,OAAO,gBAACf,GAAD,iCAEE5B,MAAM,GAAGC,KAAK,GAAGV,KAAI,SAACqD,EAAGC,GAAJ,OAAiB,gBAACf,GAAD,CAAsCE,SAAQ,YAAOa,GAArD,wBAAsEA,EAAS,GAA/E,kBAA0BA,QAFlE,YAGE7C,MAAM,GAAGC,KAAK,GAAGV,KAAI,SAACqD,EAAGE,GAAJ,OAAoB,gBAAChB,GAAD,CAAyCE,SAAQ,YAAOc,GAAxD,wBAA4EnF,GAAamF,IAAzF,kBAA0BA,SAGxE9C,MAAM,GAAGC,KAAK,GAAGV,KAAI,SAACqD,EAAGC,GAAJ,OACnB7C,MAAM,GAAGC,KAAK,GAAGV,KAAI,SAACqD,EAAGE,GAAiB,IAAD,IACjC3E,EAAQ,UAAGQ,GAA0B+D,EAAkBG,EAAUC,UAAzD,QAAyE,GACjF5F,EAAM,UAAG+B,GAAwByD,EAAkBG,EAAUC,UAAvD,QAAuE,GACnF,OACE,eAACb,GAAD,CAEED,SAAQ,UAAKrE,GAAamF,IAAlB,OAAiCD,EAAS,GAClD1E,SAAUA,EACV4E,QAAS,WACJ7F,EAAO,IAAM0B,GAAa8D,EAAkBxF,EAAO,MAClDyF,EAASK,EAAkB9F,EAAO,KAClCyF,ET5HY,CAC9BjH,KAAM,cACNC,WAAY,OSmHF,SAYEuB,EAAOP,OAAS,GAAK,gBAACuF,GAAD,WACjB,eAACE,GAAD,CAAkDG,MAAOrF,EAAO,GAAGE,OAAO,IAA1E,eAAwByF,GAAxB,OAAmCC,IACnC,gBAACX,GAAD,eAA2DjF,EAAOP,OAAlE,yBAA+BkG,GAA/B,OAA0CC,QAdhD,UACUD,GADV,OACqBC,cCvItBG,GAAW,SAAClB,GAAD,OACpB,gDAASA,GAAT,IAAgBM,QAAQ,YAAYpC,KAAK,UAAzC,SACI,uBAAMqC,EAAE,qRCFHY,GAAe,SAACnB,GAAD,OACxB,gDAASA,GAAT,IAAgBM,QAAQ,YAAYpC,KAAK,UAAzC,SACI,6BACI,uBAAMqC,EAAE,q2B,oBCSda,GAAkB9B,IAAOK,IAAV,gTAQR,SAAAK,GAAK,OAAIA,EAAMQ,SAMtBa,GAAY/B,IAAOK,IAAV,+LAST2B,GAAWhC,IAAOK,IAAV,oHAQR4B,GAAWjC,IAAOK,IAAV,sTAKD,SAAAK,GAAK,OAAIA,EAAMQ,SAStBgB,GAAelC,IAAOK,IAAV,mKAQZ8B,GAAoBnC,IAAOK,IAAV,qEAKjB+B,GAAiBpC,aCtEC,SAACU,GAAD,OACpB,iDAASA,GAAT,IAAgBM,QAAQ,YAAYpC,KAAK,UAAzC,UACI,uBAAMqC,EAAE,kBAAkBrC,KAAK,SAC/B,uBAAMqC,EAAE,wDDmEOjB,CAAH,iGAMPqC,GAAOrC,IAAOK,IAAV,qIAOXiC,GAAYtC,IAAOK,IAAV,6PAYTkC,GAAcvC,aE9FC,SAACU,GAAD,OACjB,gDAASA,GAAT,IAAgBM,QAAQ,YAAxB,SACI,uBAAMC,EAAE,oEF4FIjB,CAAH,oGAMXwC,GAAsB,SAAC,GAAQ,qBAEX3C,IAAMuB,WAAWxB,IAFP,mBAEtB0B,GAFsB,WAIhC,OAAO,gBAACY,GAAD,WACH,eAACF,GAAD,UACI,eAAC,GAAD,CAAUN,QAAS,kBAAMJ,EAASK,EAAuB,cAE7D,eAACK,GAAD,UACI,eAAC,GAAD,CAAcN,QAAS,kBAAMJ,EAASK,EAAuB,sBAKnEc,GAAgBzC,IAAOK,IAAV,uYAgBbqC,GAAe,SAAC,GAA4B,IAAD,IAA1BC,EAA0B,EAA1BA,qBAA0B,EAER9C,IAAMuB,WAAWxB,IAFT,mBAEtCyB,EAFsC,KAEpBC,EAFoB,KAI7C,OAAO,gBAACmB,GAAD,WACH,eAACH,GAAD,UACI,eAACC,GAAD,CAAab,QAAS,kBAAMiB,GAAqB,QAErD,gBAACb,GAAD,CAAiBZ,MAAmD,MAA5CG,EAAiBnG,UAAUyB,aAAuB,UAAY,UAAtF,UACI,eAACqF,GAAD,UACI,eAAC,GAAD,CAAUN,QAAS,kBAAMJ,EAASK,EAAuB,cAFjE,QAIcN,EAAiBnG,UAAUwB,WACrC,eAACsF,GAAD,UACI,eAAC,GAAD,CAAcN,QAAS,kBAAMJ,EAASK,EAAuB,qBAGjE,eAACI,GAAD,UACI,eAACI,GAAD,WAEI,iBAACd,QAAD,IAACA,GAAD,UAACA,EAAkBnG,iBAAnB,aAAC,EAA6B2B,eAA9B,QAAyC,IAAIqB,KAAI,SAAC0E,EAASC,GAAV,MACjC,MAAZD,EACE,eAACX,GAAD,CAA+Bf,MACD,UAA5B0B,EAAQE,UAAU,EAAG,GACnB,UAC4B,UAA5BF,EAAQE,UAAU,EAAG,GACrB,UACA,UALJ,SAOGF,GAPH,kBAA0BC,IAS1B,eAACR,GAAD,kBAAmBQ,eAQhCE,GAAM,SAAC,GAAQ,IAAD,yBAEYlD,IAAMuB,WAAWxB,IAF7B,mBAElByB,EAFkB,KAEAC,EAFA,OAGsBzB,IAAMmD,UAAS,GAHrC,mBAGlBC,EAHkB,KAGFN,EAHE,KAKnBO,GAAWC,yBAAc,CAACC,MAAO,4BAEvC,OAAO,uCAEDH,EACE,eAAC,GAAD,CAAcN,qBAAsBA,IACpC,gBAAC,KAAD,CAAYU,SAAU,IAAtB,UACE,gBAACvB,GAAD,CAAiBZ,MAAmD,MAA5CG,EAAiBnG,UAAUyB,aAAuB,UAAY,UAAtF,UACMuG,GAAW,eAAClB,GAAD,UACT,eAAC,GAAD,CAAUN,QAAS,kBAAMJ,EAASK,EAAuB,cAFjE,QAKcN,EAAiBnG,UAAUwB,WACnCwG,GAAW,eAAClB,GAAD,UACT,eAAC,GAAD,CAAcN,QAAS,kBAAMJ,EAASK,EAAuB,qBAIjE,eAACI,GAAD,UACI,eAACI,GAAD,WAEI,iBAACd,QAAD,IAACA,GAAD,UAACA,EAAkBnG,iBAAnB,aAAC,EAA6B2B,eAA9B,QAAyC,IAAIqB,KAAI,SAAC0E,EAASC,GAAV,MACjC,MAAZD,EACE,eAACX,GAAD,CAA+Bf,MACD,UAA5B0B,EAAQE,UAAU,EAAG,GACnB,UAC4B,UAA5BF,EAAQE,UAAU,EAAG,GACrB,UACA,UALJ,SAOGF,GAPH,kBAA0BC,IAS1B,eAACR,GAAD,kBAAmBQ,YAK9BK,GAAW,eAAC,GAAD,OAG1B,eAAC,KAAD,CAAYI,SAAU,IAAtB,SACI,eAAClB,GAAD,CAAgBV,QAAS,kBAAMiB,GAAqB,YGjNtDY,GAAUvD,IAAOK,IAAV,sfAmBPmD,GAAMxD,aPhBY,SAACU,GAAD,OACxB,gDAASA,GAAT,IAAgBM,QAAQ,cAAxB,SACC,6BACC,uBAAMC,EAAE,sDOaEjB,CAAH,0LAIG,SAAAU,GAAK,MAAoB,MAAhBA,EAAMQ,MACnB,UACA,aAOFuC,GAAazD,IAAOK,IAAV,ubAmBVqD,GAAW1D,IAAOK,IAAV,+bAmBDsD,GAAO,SAAC,GAAQ,qBAEY9D,IAAMuB,WAAWxB,IAF9B,mBAEjByB,EAFiB,KAECC,EAFD,KAIxB,OACI,gBAACiC,GAAD,WAEQ5E,MAAM,GAAGC,KAAK,GAAGV,KAAI,SAAC0F,EAAGf,GAAJ,OACjB,eAACW,GAAD,CAEItC,MAAOG,EAAiBnG,UAAUC,WAAW0H,GAAK,IAAM,KADnDA,OAMZxB,EAAiBnG,UAAU0B,QAC5B,eAAC6G,GAAD,CAAY/B,QAAS,kBAAMJ,EfjFZ,CAC3BjH,KAAM,WACNC,WAAY,Me+EA,SACI,eAACoJ,GAAD,yBCzFPG,GAAY,SAAC,GAAQ,qBAEOhE,IAAMuB,WAAWxB,IAFzB,mBAEtByB,EAFsB,KAEJC,EAFI,KAI7B,OAAO,uCACH,eAAC,GAAD,IACA,gBAAC,GAAD,WACI,gBAAC,GAAD,WACMD,EAAiB5F,WAAW,GAAG,GAAGH,QAAU,GAAK,cACjD+F,EAAiB5F,WAAW,GAAG,GAAGH,QAAU,GAAK,iBAEvD,eAAC,GAAD,CAAsBoG,QAAS,kBAAMJ,EhBQhB,CAC7BjH,KAAM,aACNC,WAAY,MgBVJ,+BCTNwJ,GAAkB9D,IAAOK,IAAV,gGAMf0D,GAAW/D,IAAOK,IAAV,0UAeR2D,GAAmBhE,aC3BC,SAACU,GAAD,OACtB,iDAASA,GAAT,IAAgBM,QAAQ,iBAAxB,UACI,gCACI,iCAEQ,2GAQZ,+BACI,uBAAMiD,UAAU,QAAQhD,EAAE,+6FAC1B,uBAAMA,EAAE,6gGACR,uBAAMgD,UAAU,QAAQhD,EAAE,2TAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,yUAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,8QAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,kSAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,wNAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,0NAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,uMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,kMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,oUAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,mMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,4MAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,wbAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,kMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,iMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,yMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,0MAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,2MAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,0MAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,4MAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,+MAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,yMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,+MAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,+MAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,kMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,sMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,qMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,sMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,oMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,qMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,oMAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,qLAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,2NAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,mNAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,uLAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,0LAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,+KAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,2NAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,4NAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,0bAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,gOAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,ybAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,2QAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,ybAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,+cAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,oaAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,mOAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,0QAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,qRAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,kRAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,kRAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,8QAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,wCAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,iDAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,uCAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,wCAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,sCAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,gDAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,uHAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,sHAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,+JAC1B,uBAAMgD,UAAU,QAAQhD,EAAE,kIDjDbjB,CAAH,iJAQhBkE,GAAa,SAAC,GAAQ,qBAEFrE,IAAMuB,WAAWxB,IAFhB,mBAEb0B,GAFa,WAIvB,OAAO,uCACH,eAAC,GAAD,CAAQI,QAAS,kBAAMJ,EAASK,EAAuB,QACvD,eAAC,GAAD,UACI,gBAACmC,GAAD,WACI,eAAC,GAAD,0BAGA,gBAACC,GAAD,iKACkJ,wBADlJ,mHAE+G,wBAF/G,mFAG+E,wBAH/E,4GAIwG,wBAJxG,yGAKqG,wBALrG,sHAMkH,wBANlH,oDAOgD,wBAPhD,wFAQoF,wBARpF,8EAS0E,wBAT1E,4FAYA,eAACC,GAAD,aAMVG,GAAiB,SAAC,GAAQ,qBAENtE,IAAMuB,WAAWxB,IAFZ,mBAEjB0B,GAFiB,WAI3B,OAAQ,uCACJ,eAAC,GAAD,CAAQI,QAAS,kBAAMJ,EAASK,EAAuB,QACvD,gBAAC,GAAD,WACI,eAAC,GAAD,uBAGA,eAAC,GAAD,CAAsBD,QAAS,WAC3BJ,EjBpDiB,CAC7BjH,KAAM,aACNC,WAAY,KiBmDAgH,EAASK,EAAuB,MAFpC,+BAUCyC,GAAe,SAAC,GAAQ,qBAEHvE,IAAMuB,WAAWxB,IAFf,mBAEzByB,EAFyB,UAIhC,OAAO,uCAE4C,SAA3CA,EAAiBnG,UAAUR,aAA0B,eAAC,GAAD,IAGV,aAA3C2G,EAAiBnG,UAAUR,aAA8B,eAAC,GAAD,QExFxD2J,GAAc,SAAC,GAAQ,qBAEVxE,IAAMuB,WAAWxB,IAFR,mBAErB0B,GAFqB,WAGzBgD,EAAQzF,KAAKC,UAAY,GAAM,WAAa,WAElD,OAAO,uCACH,eAAC,GAAD,IACA,gBAAC,GAAD,WACI,eAAC,GAAD,+BAGA,eAAC,GAAD,CAAsC4C,QAAS,WAC3CJ,EAASK,EAAoB,SAC7BL,EAASK,EAAoB2C,KAFjC,6BAA0B,aAM1B,eAAC,GAAD,CAAsC5C,QAAS,WAC3CJ,EAASK,EAAoB,QAC7BL,EAASK,EAAoB2C,KAFjC,2BAA0B,oBCnBhCC,GAAgBvE,IAAOK,IAAV,qIAQbmE,GAAKxE,IAAOyE,GAAV,gdAmBFC,GAAK1E,IAAOC,GAAV,uZAiBK0E,GAAY,SAAC,GAAQ,qBAEA9E,IAAMuB,WAAWxB,IAFlB,mBAEtByB,EAFsB,UAI7B,OAAO,gBAACkD,GAAD,WACH,eAACC,GAAD,0CAC0C,SAAxCnD,EAAiBnG,UAAUV,UAAuB,eAACkK,GAAD,+BACV,QAAxCrD,EAAiBnG,UAAUV,UAAsB,eAACkK,GAAD,+BCtCrDE,GAAS5E,IAAOK,IAAV,izBA4BCwE,GAAO,SAAC,GAAQ,eAEzB,IAnCmB5J,EAmCb6J,EAAejF,IAAMkF,WAAWtG,GAAShC,IAFvB,cAGaqI,EAHb,GAGjBzD,EAHiB,KAGCC,EAHD,KAWxB,OANAzB,IAAMmF,WAAU,WC9CI,IAAC/J,EACQ,SADRA,ED+CLoG,GC9CVnG,UAAUV,WAEiB,aAA7BS,EAAMC,UAAUN,SACuB,MAAjCK,EAAMC,UAAUyB,aACiB,MAAjC1B,EAAMC,UAAUyB,eAIR,SAAC1B,EAAOqG,GAErBrG,EAAMC,UAAU0B,QACjB0E,EtBJuB,CAC3BjH,KAAM,WACNC,WAAY,KsBKZ,IAAM2K,EAAwC,aAA7BhK,EAAMC,UAAUN,SAA0B2B,GAAgBC,GACrE0I,EAAsC,aAA7BjK,EAAMC,UAAUN,SAA0BoB,GAAiBI,GACpE+I,EAAoBF,EAAS7J,QAAO,SAAChB,GAAD,OAAamD,GAAatC,EAAOb,MAE3E,GAAI+K,EAAkB7J,OAAS,EAAG,CAC9B,IAgCM8J,EAhCiBD,EAAkBjH,KAAI,SAAC9D,GAAa,IAAD,QAChDoD,EAAgBjC,EAAuBN,EAAOb,GADE,cAEvCoD,EAFuC,GAE/C1C,EAF+C,KAE5CC,EAF4C,KAyBtD,MAAQ,CACJX,QAASA,EACTiL,WAtBQ,oBAACzH,GAAwB3C,EAAOH,EAAGC,UAAnC,aAAC,EAAsCO,cAAvC,QAAiD,GAAK,GACA,WAAnD,UAACgC,GAA0BrC,EAAOH,EAAGC,UAArC,QAA2C,IACxC,GACA,IAI6C,aAAnD,UAACuC,GAA0BrC,EAAOH,EAAGC,UAArC,QAA2C,IACrC,GACA,GAINmK,EAAOI,QAAO,SAACC,EAAaC,EAAYC,GAA1B,OACV5K,EAAc2K,EAAYhI,GACpBiI,EAAM,EACNF,IACP,OAUyBG,MAAK,SAACC,EAAWC,GAAZ,OAA0BA,EAAWP,SAAWM,EAAUN,YAC3GQ,QAAQC,IAAIV,GACZ,IAAMW,EAAkBX,EAAqB,GAAGhL,QAChDkH,EAASK,EAAkBoE,IAC3BzE,EtB3C0B,CAC9BjH,KAAM,cACNC,WAAY,MqBiCJ0L,CAAO3E,EAAkBC,KAE9B,CAACD,IAEG,qCACH,gBAACzB,GAAYqG,SAAb,CAAsBC,MAAOpB,EAA7B,UACI,gBAACF,GAAD,WACI,eAAC,GAAD,IAE4C,KAAxCvD,EAAiBnG,UAAUV,SACzB,eAAC,GAAD,KAlDCS,EAmDcoG,EAlDjCpG,EAAMQ,WAAW,GAAG,GAAGI,OAAOP,QAAU,GACrCL,EAAMQ,WAAW,GAAG,GAAGI,OAAOP,QAAU,EAuDrB,eAAC,GAAD,IALA,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,WAKhB,eAAC,GAAD,UE/DG6K,GAJH,kBACR,eAAC,GAAD,KCDJC,IAASC,OACP,eAAC,IAAMC,WAAP,UACI,eAAC,GAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.a5f4c676.chunk.js","sourcesContent":["\r\n// BOARD STATE ACTIONS //\r\n\r\nexport const moveStone = (stoneID) => ({\r\n    type: \"moveStone\",\r\n    parameters: {\r\n        stoneID: stoneID,\r\n    },\r\n})\r\n\r\n// DICE STATE ACTIONS //\r\n\r\nexport const rollDice = () => ({\r\n    type: \"rollDice\",\r\n    parameters: {},\r\n})\r\n\r\nexport const resetRolled = () => ({\r\n    type: \"resetRolled\",\r\n    parameters: {},\r\n})\r\n\r\n// GAME STATE ACTIONS //\r\n\r\nexport const resetState = () => ({\r\n    type: \"resetState\",\r\n    parameters: {},\r\n})\r\n\r\nexport const setGameType = (gameType) => ({\r\n    type: \"setGameType\",\r\n    parameters: {\r\n        gameType: gameType,\r\n    },\r\n})\r\n\r\nexport const setWindowState = (windowState) => ({\r\n    type: \"setWindowState\",\r\n    parameters: {\r\n        windowState: windowState,\r\n    },\r\n})\r\n\r\nexport const setWhoFirst = (whoFirst) => ({\r\n    type: \"setWhoFirst\",\r\n    parameters: {\r\n        whoFirst: whoFirst,\r\n    },\r\n})\r\n\r\n// LOG STATE ACTIONS //\r\n\r\nexport const logMove = (moveToLog) => ({\r\n    type: \"logMove\",\r\n    parameters: {\r\n        moveToLog: moveToLog,\r\n    },\r\n})","\r\n// Functions\r\n\r\nexport const compareCoords = (x, y) => (\r\n  x[0] === y[0] && x[1] === y[1]\r\n)\r\n\r\nexport const calculateMoveDistance = (state) => (\r\n  state.gameState.rollResult.filter((r) => r).length\r\n);\r\n\r\nexport const calculateLandingCoords = (state, stoneID) => {\r\n  const tileWithID = state.boardState.flat().find((tile) => {\r\n    if (!tile.stones) {\r\n      debugger\r\n    }\r\n    return tile?.stones?.includes(stoneID) ?? false\r\n  })\r\n  if(stoneID.charAt(0) === \"W\")\r\n      return whiteStonePath[\r\n          whiteStonePath.findIndex((c) =>\r\n              compareCoords(c, tileWithID.coordinates)) + calculateMoveDistance(state)\r\n      ]\r\n  else if(stoneID.charAt(0) === \"B\")\r\n      return blackStonePath[\r\n          blackStonePath.findIndex((c) =>\r\n              compareCoords(c, tileWithID.coordinates)) + calculateMoveDistance(state)\r\n      ]\r\n  else\r\n      throw new Error(\"Invalid stone id (not W or B)\");\r\n}\r\n\r\n// Data\r\n\r\nexport const rowLetterMap = [\r\n  \"A\", \"B\", \r\n  \"C\", \"D\", \r\n  \"E\", \"F\", \r\n  \"G\", \"H\",\r\n];\r\n\r\nexport const whiteStoneIDs = [\r\n    \"W1\", \"W2\", \"W3\",\r\n    \"W4\", \"W5\", \"W6\",\r\n];\r\n  \r\nexport const blackStoneIDs = [\r\n  \"B1\", \"B2\", \"B3\",\r\n  \"B4\", \"B5\", \"B6\",\r\n];\r\n\r\nexport const whiteStonePath = [\r\n  [0,4], [0,3],\r\n  [0,2], [0,1], \r\n  [0,0], [1,0], \r\n  [1,1], [1,2],\r\n  [1,3], [1,4], \r\n  [1,5], [1,6], \r\n  [1,7], [0,7], \r\n  [0,6], [0,5], \r\n];\r\n\r\nexport const blackStonePath = [\r\n  [2,4], [2,3], \r\n  [2,2], [2,1], \r\n  [2,0], [1,0], \r\n  [1,1], [1,2], \r\n  [1,3], [1,4], \r\n  [1,5], [1,6], \r\n  [1,7], [2,7], \r\n  [2,6], [2,5], \r\n];\r\n\r\nexport const defaultGameState = {\r\n  gameState: {\r\n      whoFirst: \"\",\r\n      turnNumber: 1,\r\n      activePlayer: 'W',\r\n      rollResult: [false, false, false, false],\r\n      rolled: false,\r\n      gameType: \"\",\r\n      windowState: \"\",\r\n      moveLog: [\"Welcome to\", \"Game of Twenty Squares\", \"-\"],\r\n  },\r\n  boardState: [\r\n    [\r\n      { // [0,0]\r\n        modifier: \"Rosette\",\r\n        coordinates: [0,0],\r\n        stones: [],\r\n      },\r\n      { // [0,1]\r\n        modifier: \"None\",\r\n        coordinates: [0,1],\r\n        stones: [],\r\n      },\r\n      { // [0,2]\r\n        modifier: \"None\",\r\n        coordinates: [0,2],\r\n        stones: [],\r\n      },\r\n      { // [0,3]\r\n        modifier: \"None\",\r\n        coordinates: [0,3],\r\n        stones: [],\r\n      },\r\n      { // [0,4]\r\n        modifier: \"Empty\",\r\n        coordinates: [0,4],\r\n        stones: [\"W1\",\"W2\",\"W3\",\"W4\",\"W5\",\"W6\"],\r\n      },\r\n      { // [0,5]\r\n        modifier: \"Empty\",\r\n        coordinates: [0,5],\r\n        stones: [],\r\n      },\r\n      { // [0,6]\r\n        modifier: \"Rosette\",\r\n        coordinates: [0,6],\r\n        stones: [],\r\n      },\r\n      { // [0,7]\r\n        modifier: \"None\",\r\n        coordinates: [0,7],\r\n        stones: [],\r\n      },\r\n    ],\r\n    [\r\n      { // [1,0]\r\n        modifier: \"None\",\r\n        coordinates: [1,0],\r\n        stones: [],\r\n      },\r\n      { // [1,1]\r\n        modifier: \"None\",\r\n        coordinates: [1,1],\r\n        stones: [],\r\n      },\r\n      { // [1,2]\r\n        modifier: \"None\",\r\n        coordinates: [1,2],\r\n        stones: [],\r\n      },\r\n      { // [1,3]\r\n        modifier: \"None\",\r\n        coordinates: [1,3],\r\n        stones: [],\r\n      },\r\n      { // [1,4]\r\n        modifier: \"Rosette\",\r\n        coordinates: [1,4],\r\n        stones: [],\r\n      },\r\n      { // [1,5]\r\n        modifier: \"None\",\r\n        coordinates: [1,5],\r\n        stones: [],\r\n      },\r\n      { // [1,6]\r\n        modifier: \"None\",\r\n        coordinates: [1,6],\r\n        stones: [],\r\n      },\r\n      { // [1,7]\r\n        modifier: \"None\",\r\n        coordinates: [1,7],\r\n        stones: [],\r\n      },\r\n    ],\r\n    [\r\n      { // [2,0]\r\n        modifier: \"Rosette\",\r\n        coordinates: [2,0],\r\n        stones: [],\r\n      },\r\n      { // [2,1]\r\n        modifier: \"None\",\r\n        coordinates: [2,1],\r\n        stones: [],\r\n      },\r\n      { // [2,2]\r\n        modifier: \"None\",\r\n        coordinates: [2,2],\r\n        stones: [],\r\n      },\r\n      { // [2,3]\r\n        modifier: \"None\",\r\n        coordinates: [2,3],\r\n        stones: [],\r\n      },\r\n      { // [2,4]\r\n        modifier: \"Empty\",\r\n        coordinates: [2,4],\r\n        stones: [\"B1\",\"B2\",\"B3\",\"B4\",\"B5\",\"B6\"],\r\n      },\r\n      { // [2,5]\r\n        modifier: \"Empty\",\r\n        coordinates: [2,5],\r\n        stones: [],\r\n      },\r\n      { // [2,6]\r\n        modifier: \"Rosette\",\r\n        coordinates: [2,6],\r\n        stones: [],\r\n      },\r\n      { // [2,7]\r\n        modifier: \"None\",\r\n        coordinates: [2,7],\r\n        stones: [],\r\n      },\r\n    ],\r\n  ],\r\n};\r\n","\r\nexport const addToMoveLog = (state, moveToLogArr) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        moveLog: [...state.gameState.moveLog, ...moveToLogArr],\r\n    }\r\n});","import { getTileWithID, getTileModifierWithCoords } from './boardStateFunctions';\r\n\r\nconst incrementTurnNumber = (state) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        turnNumber: state.gameState.turnNumber + 1,\r\n    }\r\n})\r\n\r\nexport const advanceTurn = (state, stoneID) => {\r\n    const nextActivePlayer = state.gameState.activePlayer === \"W\" ? \"B\" : \"W\"\r\n    const stoneCoords = stoneID !== \"None\"\r\n        ? getTileWithID(state, stoneID)?.coordinates ?? false\r\n        : [1,1]\r\n    if(stoneCoords) {\r\n        const [x, y] = stoneCoords\r\n        const modifier = getTileModifierWithCoords(state, x, y)\r\n        if(modifier !== \"Rosette\") {\r\n            return nextActivePlayer === \"W\"\r\n                ? {\r\n                    ...state,\r\n                    gameState: {\r\n                        ...incrementTurnNumber(state).gameState,\r\n                        activePlayer: nextActivePlayer\r\n                    },\r\n                }\r\n                : {\r\n                    ...state,\r\n                    gameState: {\r\n                        ...state.gameState,\r\n                        activePlayer: nextActivePlayer,\r\n                    },\r\n                }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const setTheGameType = (state, gameType) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        gameType: gameType,\r\n    },\r\n});\r\n\r\nexport const setTheWindowState = (state, windowState) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        windowState: windowState,\r\n    },\r\n});\r\n\r\nexport const setTheWhoFirst = (state, whoFirst) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        whoFirst: whoFirst,\r\n    },\r\n});\r\n\r\n\r\n","import { whiteStonePath, blackStonePath, rowLetterMap, compareCoords, calculateLandingCoords, calculateMoveDistance } from './gameConstants';\r\nimport { addToMoveLog } from './logStateFunctions';\r\nimport { advanceTurn } from './gameStateFunctions';\r\n\r\nexport const validateMove = (state, stoneID) => {\r\n    const landingCoords = calculateLandingCoords(state, stoneID) ?? false\r\n    if(landingCoords && state.gameState.rolled){\r\n        const [tx, ty] = landingCoords\r\n        const firstStoneAtTargetLocation = state.boardState[tx][ty]?.stones?.[0] ?? \"\"\r\n        return ((stoneID.charAt(0) === \"W\"\r\n                && state.gameState.activePlayer === \"W\")\r\n            || (stoneID.charAt(0) === \"B\"\r\n                && state.gameState.activePlayer === \"B\"))\r\n        && (calculateMoveDistance(state) === 0\r\n            || firstStoneAtTargetLocation.charAt(0) !== state.gameState.activePlayer\r\n            || (compareCoords(landingCoords, [0,5])\r\n                || compareCoords(landingCoords, [2,5])))\r\n        && !(compareCoords(landingCoords, [1,4])\r\n            && (state.boardState[tx][ty]?.stones?.length ?? 0) > 0)\r\n    }\r\n    return false;\r\n  }\r\n\r\nexport const getTileWithID = (state, stoneID) => (\r\n    state.boardState.flat().find((tile) => tile.stones.includes(stoneID))\r\n  );\r\n  \r\n  export const getTileModifierWithCoords = (state, x, y) => (\r\n    state.boardState[x][y].modifier\r\n  );\r\n  \r\n  export const getTileStonesWithCoords = (state, x, y) => (\r\n    state.boardState[x][y].stones\r\n  );\r\n  \r\n  export const moveStone = (prevState, stoneID, newLocation) => {\r\n      const activePlayerText = prevState.gameState.activePlayer === \"W\" ? \"White\" : \"Black\";\r\n      const loggedPrevState = (\r\n        getTileModifierWithCoords(prevState, newLocation[0], newLocation[1]) !== \"Empty\"\r\n            ? addToMoveLog(prevState, [`${activePlayerText} moved to ${\r\n                rowLetterMap[newLocation[1]] + (3 - newLocation[0])\r\n            }`])\r\n            : prevState\r\n      )\r\n      return {\r\n          ...loggedPrevState,\r\n          boardState:\r\n              stoneID === \"Error\"\r\n              ? loggedPrevState.boardState\r\n              : addInStone(\r\n                  loggedPrevState.boardState.map((row, x) => (\r\n                      row.map((tile, y) => ({\r\n                          ...tile,\r\n                          stones: tile.stones?.filter((id) => id !== stoneID) ?? [],\r\n                      }))\r\n                  )),\r\n              stoneID, newLocation),\r\n      };\r\n  };\r\n  \r\n  export const bumpStone = (prevState, stoneID, newLocation) => {\r\n    const [x, y] = newLocation\r\n    const stoneToBump = prevState.boardState[x][y]?.stones?.[0] ?? false\r\n    if(stoneToBump) {\r\n        return moveStone(\r\n            moveStone(prevState, stoneToBump,\r\n                stoneToBump.charAt(0) === 'W'\r\n                ? whiteStonePath[0]\r\n                : blackStonePath[0]\r\n            ),\r\n        stoneID, newLocation)\r\n    }\r\n    else\r\n        throw new Error(\"Stone being bumped doesnt exist\");\r\n  }\r\n  \r\n  \r\n  export const addInStone = (prevBoardState, stoneID, newLocation) => (\r\n    prevBoardState.map((row, x) => (\r\n        row.map((tile, y) => ({\r\n            ...tile,\r\n            stones: compareCoords([x,y], newLocation) ? [...tile.stones, stoneID] : tile.stones,\r\n        }))\r\n    ))\r\n  )\r\n\r\n  const moveStoneToLandingCoords = (state, stoneID) => {\r\n    const landingCoords = calculateLandingCoords(state, stoneID)\r\n    const [x, y] = landingCoords\r\n    const firstCharOfFirstStoneAtTarget = state.boardState[x][y]?.stones?.[0]?.charAt(0) ?? stoneID.charAt(0)\r\n    if(firstCharOfFirstStoneAtTarget !== stoneID.charAt(0))\r\n        return bumpStone(state, stoneID, landingCoords)\r\n    return moveStone(state, stoneID, landingCoords)\r\n};\r\n\r\nexport const moveStoneWrap = (state, stoneID) => (\r\n    advanceTurn(moveStoneToLandingCoords(state, stoneID), stoneID)    \r\n);\r\n  ","import { moveStoneWrap } from './functions/boardStateFunctions';\r\nimport { rollDice, resetRollResult } from './functions/diceStateFunctions';\r\nimport { defaultGameState } from './functions/gameConstants';\r\nimport { setTheGameType, setTheWindowState, setTheWhoFirst } from './functions/gameStateFunctions';\r\nimport { addToMoveLog } from './functions/logStateFunctions';\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"rollDice\":\r\n            return rollDice(state);\r\n        case \"resetRolled\":\r\n            return resetRollResult(state);\r\n        case \"moveStone\":\r\n            return moveStoneWrap(state, action.parameters.stoneID);\r\n        case \"logMove\":\r\n            return addToMoveLog(state, action.parameters.moveToLog);\r\n        case \"setGameType\":\r\n            return setTheGameType(state, action.parameters.gameType);\r\n        case \"setWindowState\":\r\n            return setTheWindowState(state, action.parameters.windowState);\r\n        case \"setWhoFirst\":\r\n            return setTheWhoFirst(state, action.parameters.whoFirst);\r\n        case \"resetState\":\r\n            return defaultGameState;\r\n        default:\r\n            throw new Error(\"Invalid Action Type\");\r\n    }\r\n};","import { whiteStoneIDs, blackStoneIDs, calculateMoveDistance } from './gameConstants';\r\nimport { addToMoveLog } from './logStateFunctions';\r\nimport { validateMove } from './boardStateFunctions';\r\nimport { advanceTurn } from './gameStateFunctions';\r\n\r\nexport const rollDice = (state) => {\r\n    const rollResult = Array(4).fill(0).map(() => Math.random() >= 0.5);\r\n    const testState = {\r\n        ...state,\r\n        gameState: {\r\n            ...state.gameState,\r\n            rollResult: rollResult,\r\n            moveMessage: \"\",\r\n            rolled: true,\r\n        },\r\n    }\r\n    const activePlayer = state.gameState.activePlayer\r\n    const validMoves = (activePlayer === \"W\"\r\n        ? whiteStoneIDs\r\n        : blackStoneIDs\r\n    ).filter((id) => validateMove(testState, id))\r\n    const moveDistance = calculateMoveDistance(testState);\r\n    const activePlayerText = state.gameState.activePlayer === \"W\" ? \"White\" : \"Black\";\r\n    const noValidMoveLoggedState = addToMoveLog(state, [\r\n        `${activePlayerText} rolled ${moveDistance}`, \r\n        `${activePlayerText} had no valid moves`\r\n    ]);\r\n    const rollZeroLoggedState = addToMoveLog(state, [\r\n        `${activePlayerText} rolled ${moveDistance}`\r\n    ]);\r\n    return moveDistance > 0\r\n        ? validMoves.length > 0\r\n            ? addToMoveLog(testState, [`${activePlayerText} rolled ${moveDistance}`])\r\n            : {\r\n                ...noValidMoveLoggedState,\r\n                gameState: {\r\n                    ...advanceTurn(noValidMoveLoggedState, \"None\").gameState\r\n                },\r\n            }\r\n        : {\r\n            ...rollZeroLoggedState,\r\n            gameState: {\r\n                ...advanceTurn(rollZeroLoggedState, \"None\").gameState,\r\n            },\r\n        }\r\n};\r\n\r\nexport const resetRollResult = (state) => ({\r\n    ...state,\r\n    gameState: {\r\n        ...state.gameState,\r\n        rollResult: [false, false, false, false],\r\n        rolled: false,\r\n    },\r\n});","import React from 'react';\r\n\r\nimport { isAITurn, aiTurn } from './functions/aiFunctions';\r\n// Import AI State\r\n\r\nimport { getTileModifierWithCoords, getTileStonesWithCoords, validateMove } from './functions/boardStateFunctions';\r\n// Import Board State\r\n\r\nimport { defaultGameState, whiteStoneIDs, blackStoneIDs, whiteStonePath, blackStonePath, rowLetterMap } from './functions/gameConstants';\r\n// Import Constants\r\n\r\nimport { reducer } from './reducer';\r\n// Import Reducer\r\n\r\nexport { isAITurn, aiTurn};\r\n// Export AI State\r\n\r\nexport { getTileModifierWithCoords, getTileStonesWithCoords, validateMove };\r\n// Export Board State\r\n\r\nexport { defaultGameState, whiteStoneIDs, blackStoneIDs, whiteStonePath, blackStonePath, rowLetterMap };\r\n// Export Constants\r\n\r\nexport { reducer };\r\n// Export Reducer\r\n\r\nexport const GameContext = React.createContext([]);\r\n// Export Context\r\n\r\n","import styled, { css } from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Circle = (props) =>\r\n<svg {...props} viewBox=\"0 0 512 512\">\r\n    <g>\r\n    \t<path d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\"/>\r\n    </g>\r\n</svg>\r\n\r\nexport const Triangle = (props) =>\r\n<svg {...props} viewBox=\"0 0 490 490\">\r\n\t<g>\r\n\t\t<path d=\"M490,474.459H0L245.009,15.541L490,474.459z\"/>\r\n\t</g>\r\n</svg>\r\n\r\nexport const SubTitleText = styled.h2`\r\n    font-size: 5rem;\r\n    margin: auto;\r\n    letter-spacing: 0.1em;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nexport const MenuH2 = styled.h2`\r\n    font-size: 3.5rem;\r\n    letter-spacing: 0.1em;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    color: #7851A9;\r\n    margin-bottom: 5vh;\r\n    --wider-dimension: max(1vh, 1vw);\r\n    @media only screen and (max-aspect-ratio: 1/1) {\r\n        font-size: min(8vw, 3.75vh);\r\n        \r\n    }\r\n`;\r\n\r\nexport const SubTitleTextButton = styled.h2`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 3rem;\r\n    margin: auto;\r\n    letter-spacing: 0.1em;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    color: #FFFFFF;\r\n    background-color: #7851A9;\r\n    padding: 1.5vh 2vw;\r\n    border-radius: 10px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    @media only screen and (max-aspect-ratio: 1/1) {\r\n        padding: 0;\r\n        width: 90%;\r\n        height: 20%;\r\n        font-size: min(5vw, 9.5vh);\r\n    }\r\n`;\r\n\r\nexport const Blur = styled.div`\r\n    z-index: 5;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    backdrop-filter: blur(5px);\r\n`;\r\n\r\nexport const Window = styled.div`\r\n    z-index: 6;\r\n    position: absolute;\r\n    width: 75vw;\r\n    height: 75vh;\r\n    background-color: #373737;\r\n    transform: translate(-50%, -50%);\r\n    top: 50vh;\r\n    left: 50vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 10px;\r\n    border: 10px solid #7851A9;\r\n`;\r\n\r\nexport const WrapperLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n","import React from 'react';\r\nimport styled, { css } from \"styled-components\";\r\nimport * as g from '../../global/components';\r\nimport * as Actions from '../gameContext/actions'\r\nimport { GameContext, getTileStonesWithCoords, getTileModifierWithCoords, validateMove, rowLetterMap } from '../gameContext';\r\n\r\n\r\nconst GameBoardGrid = styled.div`\r\n  grid-area: board;\r\n  display: inline-grid;\r\n  align-self: center;\r\n  margin: 0 1vw;\r\n  aspect-ratio: 25/10;\r\n  grid-template-rows: 3fr 3fr 3fr 1fr;\r\n  grid-template-columns: 1fr 3fr 3fr 3fr 3fr 3fr 3fr 3fr 3fr;\r\n  grid-template-areas: \r\n    \"RL2 A3 B3 C3 D3 E3 F3 G3 H3\"\r\n    \"RL1 A2 B2 C2 D2 E2 F2 G2 H2\"\r\n    \"RL0 A1 B1 C1 D1 E1 F1 G1 H1\"\r\n    \". CL0 CL1 CL2 CL3 CL4 CL5 CL6 CL7\";\r\n  gap: 8px;\r\n  @media only screen and (max-aspect-ratio: 1/1) {\r\n    margin: 1vh 0;\r\n    aspect-ratio: 10/25;\r\n    width: 60%;\r\n    justify-self: center;\r\n    place-self: center;\r\n    grid-template-columns: 1fr 3fr 3fr 3fr;\r\n    grid-template-rows: 1fr 3fr 3fr 3fr 3fr 3fr 3fr 3fr 3fr;\r\n    grid-template-areas: \r\n      \". RL0 RL1 RL2\"\r\n      \"CL0 A1 A2 A3\"\r\n      \"CL1 B1 B2 B3\"\r\n      \"CL2 C1 C2 C3\"\r\n      \"CL3 D1 D2 D3\"\r\n      \"CL4 E1 E2 E3\"\r\n      \"CL5 F1 F2 F3\"\r\n      \"CL6 G1 G2 G3\"\r\n      \"CL7 H1 H2 H3\";\r\n    @media only screen and (max-width: 700px) {\r\n      width: 50%;\r\n      @media only screen and (max-height: 550px) {\r\n        width: 40%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GameBoardLabel = styled.div`\r\n  color: white;\r\n  text-align: center;\r\n  place-self: center;\r\n  font-size: 1.5rem;\r\n  grid-area: ${props => props.gridarea};\r\n  @media only screen and (max-aspect-ratio: 1/1) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst GameTile = styled.div`\r\n  position: static;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  color: white;\r\n  font-size: 2.5rem;\r\n  background-color: #cccccc;\r\n  grid-area: ${props => props.gridarea};\r\n  background-color: ${props => props.modifier === \"Rosette\"\r\n    ? \"#7851A9\" \r\n    : props.modifier === \"Empty\" \r\n      ? \"transparent\" \r\n      : \"#aaaaaa\"\r\n  };\r\n`;\r\n\r\nconst StoneTextWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 15%;\r\n  :hover {\r\n      margin: 10%;\r\n      cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst GameTileText = styled.div`\r\n    width: 100%;\r\n    margin-left: -100%;\r\n    color: #7851A9;\r\n    font-size: 2.5rem;\r\n    pointer-events: none;\r\n    user-select: none;\r\n    grid-area: center;\r\n    z-index: 3;\r\n    line-height: 1em;\r\n    @media only screen and (max-aspect-ratio: 1/1) {\r\n      font-size: 1.5rem;\r\n    }\r\n    @media only screen and (max-height: 550px) {\r\n      font-size: 0.75rem;\r\n    }\r\n`;\r\n\r\nconst GameStone = styled(g.Circle)`\r\n    width: 100%;\r\n    color: #7851A9;\r\n    grid-area: center;\r\n    pointer-events: none;\r\n    user-select: none;\r\n    z-index: 2;\r\n    fill: ${props => props.color === \"W\"\r\n      ? \"#FFFFFF\"\r\n      : \"#000000\"\r\n    };\r\n`;\r\n\r\n\r\n\r\nexport const Board = ({}) => {\r\n\r\n    const [gameContextState, dispatch] = React.useContext(GameContext);\r\n\r\n    return <GameBoardGrid>\r\n      {[\r\n          ...Array(3).fill(0).map((_, rowIndex) => <GameBoardLabel key={`RL${rowIndex}`} gridarea={`RL${rowIndex}`}> {`${rowIndex+1}`} </GameBoardLabel>),\r\n          ...Array(8).fill(0).map((_, columnIndex) => <GameBoardLabel key={`CL${columnIndex}`} gridarea={`CL${columnIndex}`}> {`${rowLetterMap[columnIndex]}`} </GameBoardLabel>),\r\n      ]}\r\n      {\r\n        Array(3).fill(0).map((_, rowIndex) => (\r\n          Array(8).fill(0).map((_, columnIndex) => {\r\n            const modifier = getTileModifierWithCoords(gameContextState, rowIndex, columnIndex) ?? \"\";\r\n            const stones = getTileStonesWithCoords(gameContextState, rowIndex, columnIndex) ?? [];\r\n            return (\r\n              <GameTile \r\n                key={`${rowIndex}${columnIndex}`} \r\n                gridarea={`${rowLetterMap[columnIndex]}${rowIndex+1}`} \r\n                modifier={modifier}\r\n                onClick={() => {\r\n                  if(stones[0] && validateMove(gameContextState, stones[0])) {\r\n                      dispatch(Actions.moveStone(stones[0]));\r\n                      dispatch(Actions.resetRolled());\r\n                  }\r\n                }}\r\n              > \r\n              { \r\n                stones.length > 0 && <StoneTextWrap>\r\n                    <GameStone key={`Stone${rowIndex}${columnIndex}`} color={stones[0].charAt(0)}/>\r\n                    <GameTileText key={`StoneText${rowIndex}${columnIndex}`}> {stones.length} </GameTileText>\r\n                </StoneTextWrap>\r\n              }\r\n              </GameTile>\r\n            );\r\n          })\r\n        ))\r\n      }\r\n    </GameBoardGrid>\r\n};\r\n\r\n\r\n/*\r\n<GameBoardRow>\r\n              <GameBoardColumn key={`Labelcolumn`}>\r\n                <GameBoardRowLabel key=\"Label3\">3</GameBoardRowLabel>\r\n                <GameBoardRowLabel key=\"Label2\">2</GameBoardRowLabel>\r\n                <GameBoardRowLabel key=\"Label1\">1</GameBoardRowLabel>\r\n                <GameBoardCornerDot/>\r\n              </GameBoardColumn>\r\n              {\r\n                Array(7).fill(0).map((_, rowIndex) =>\r\n                  <GameBoardColumn key={`column${rowIndex}`}>\r\n                    {\r\n                      Array(3).fill(0).map((_, columnIndex) => {\r\n                        const modifier = getTileModifierWithCoords(gameContextState, columnIndex, rowIndex) ?? \"\";\r\n                        const stones = getTileStonesWithCoords(gameContextState, columnIndex, rowIndex) ?? [];\r\n                        return <GameTile\r\n                            onClick={() => {\r\n                                if(stones[0] && validateMove(gameContextState, stones[0])) {\r\n                                    dispatch(Actions.moveStone(stones[0]))\r\n                                    dispatch(Actions.resetRolled())\r\n                                }\r\n                            }}\r\n                            key={`Tile[${columnIndex},${rowIndex}]`}\r\n                            modifier={modifier}\r\n                          >\r\n                            {stones.length > 0 ? <GameStone color={stones[0].charAt(0)}/> : null}\r\n                            <GameTileText>\r\n                                {stones.length > 0 ? stones.length : \"\"}\r\n                            </GameTileText>\r\n                          </GameTile>\r\n                      })\r\n                    }\r\n                    <GameBoardColumnLabel key={`${rowIndex}CLabel`}>{ rowLetterMap?.[rowIndex] ?? \"\"}</GameBoardColumnLabel>\r\n                  </GameBoardColumn>\r\n                )\r\n              }\r\n      </GameBoardRow>\r\n*/\r\n\r\n\r\n/*\r\nArray(4).fill(0).map((_, rowIndex) => <>\r\n            \r\n              Array(9).fill(0).map((_, columnIndex) => {\r\n                const modifier = getTileModifierWithCoords(gameContextState, columnIndex, rowIndex) ?? \"\";\r\n                const stones = getTileStonesWithCoords(gameContextState, columnIndex, rowIndex) ?? [];\r\n                return <GameTile\r\n                    onClick={() => {\r\n                        if(stones[0] && validateMove(gameContextState, stones[0])) {\r\n                            dispatch(Actions.moveStone(stones[0]))\r\n                            dispatch(Actions.resetRolled())\r\n                        }\r\n                    }}\r\n                    key={`Tile[${columnIndex},${rowIndex}]`}\r\n                    modifier={modifier}\r\n                  >\r\n                    {stones.length > 0 ? <GameStone color={stones[0].charAt(0)}/> : null}\r\n                    <GameTileText>\r\n                        {stones.length > 0 ? stones.length : \"\"}\r\n                    </GameTileText>\r\n                  </GameTile>\r\n              })\r\n            <GameBoardColumnLabel key={`${rowIndex}CLabel`}>{ rowLetterMap?.[rowIndex] ?? \"\"}</GameBoardColumnLabel>\r\n          </GameBoardColumn>\r\n        </>)\r\n      }\r\n    </GameBoardGrid>\r\n*/","export const HelpIcon = (props) => (\r\n    <svg {...props} viewBox=\"0 0 24 24\" fill=\"#FFFFFF\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\"/>\r\n    </svg>\r\n)","export const SettingsIcon = (props) => (\r\n    <svg {...props} viewBox=\"0 0 24 24\" fill=\"#FFFFFF\">\r\n        <g>\r\n            <path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\r\n        </g>\r\n    </svg>\r\n);","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport * as Actions from '../gameContext/actions'\r\nimport { GameContext } from '../gameContext';\r\nimport { HelpIcon } from './assets/helpIcon';\r\nimport { SettingsIcon } from './assets/settingsIcon';\r\nimport { MenuIcon } from './assets/menuIcon';\r\nimport { Arrow } from './assets/arrow';\r\n\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport MediaQuery from 'react-responsive'\r\n\r\nconst TurnMoveTracker = styled.div`\r\n    grid-area: lMenuHead;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    color: ${props => props.color};\r\n    background-color: #7851A9;\r\n    border-bottom: 2px solid #000000;\r\n    \r\n`;\r\n\r\nconst MovesWrap = styled.div` \r\n    grid-area: lMenu;\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n    background-color: #aaaaaa;\r\n`;\r\n\r\nconst IconWrap = styled.div`\r\n    height: 3.5rem;\r\n    width: 3.5rem;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst LogEntry = styled.div`\r\n    width: 100%;\r\n    font-size: 1.5rem;\r\n    letter-spacing: 0.05em;\r\n    margin-left: 1vw;\r\n    color: ${props => props.color};\r\n    @media only screen and (max-aspect-ratio: 1/1) {\r\n        font-size: 1rem;\r\n    }\r\n    @media only screen and (max-width: 700px) {\r\n        font-size: 1.5rem;\r\n    }\r\n`;\r\n\r\nconst MiniMenuWrap = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    grid-area: rMenuHead;\r\n`;\r\n\r\nconst SwapDirectionWrap = styled.div`\r\n    padding: 20px 0;\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst StyledMenuIcon = styled(MenuIcon)`\r\n    grid-area: lMenuHead;\r\n    width: 80%;\r\n    place-self: center;\r\n`;\r\n\r\nexport const Line = styled.div`\r\n    width: 80%;\r\n    margin: 20px auto;\r\n    text-align: center;\r\n    border-bottom: solid 2px #7851A9;\r\n`;\r\n\r\nconst ArrowWrap = styled.div`\r\n    grid-area: back;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    background-color: #7851A9;\r\n    fill: #FFFFFF;\r\n    color: #FFFFFF;\r\n    font-size: 1.5rem;\r\n`\r\n\r\nconst StyledArrow = styled(Arrow)`\r\n    transform: rotate(270deg);\r\n    height: 4rem;\r\n    margin: 0 20px;\r\n`;\r\n\r\nconst LogButtonsMiniGroup = ({}) => {\r\n\r\n    const [_, dispatch] = React.useContext(GameContext);\r\n\r\n    return <MiniMenuWrap>\r\n        <IconWrap>\r\n            <HelpIcon onClick={() => dispatch(Actions.setWindowState(\"Info\"))}/>\r\n        </IconWrap>\r\n        <IconWrap>\r\n            <SettingsIcon onClick={() => dispatch(Actions.setWindowState(\"Settings\"))}/>\r\n        </IconWrap>\r\n    </MiniMenuWrap>\r\n}\r\n\r\nconst HamburgerGrid = styled.div`\r\n    position: absolute;\r\n    display: grid;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 4;\r\n    grid-template-rows: 1fr 1fr 12fr;\r\n    grid-template-columns: 2fr 6fr 2fr;\r\n    grid-template-areas: \r\n        \"back back back\"\r\n        \"lMenuHead lMenuHead lMenuHead\"\r\n        \"lMenu lMenu lMenu\"\r\n        \"lMenu lMenu lMenu\"\r\n        \"lMenu lMenu lMenu\";\r\n`;\r\n\r\nconst HamburgerLog = ({updateHamburgerState}) => {\r\n\r\n    const [gameContextState, dispatch] = React.useContext(GameContext);\r\n\r\n    return <HamburgerGrid>\r\n        <ArrowWrap>\r\n            <StyledArrow onClick={() => updateHamburgerState(false)}/>\r\n        </ArrowWrap>\r\n        <TurnMoveTracker color={gameContextState.gameState.activePlayer === \"W\" ? \"#FFFFFF\" : \"#000000\"}>\r\n            <IconWrap>\r\n                <HelpIcon onClick={() => dispatch(Actions.setWindowState(\"Info\"))}/>\r\n            </IconWrap>  \r\n                Turn {gameContextState.gameState.turnNumber}\r\n            <IconWrap>\r\n                <SettingsIcon onClick={() => dispatch(Actions.setWindowState(\"Settings\"))}/>\r\n            </IconWrap>\r\n        </TurnMoveTracker>\r\n            <MovesWrap>\r\n                <SwapDirectionWrap>\r\n                {\r\n                    (gameContextState?.gameState?.moveLog ?? []).map((message, i) => (\r\n                        message !== \"-\" \r\n                        ? <LogEntry key={`Message-${i}`} color={\r\n                            message.substring(0, 5) === \"White\"\r\n                            ? \"#FFFFFF\"\r\n                            : message.substring(0, 5) === \"Black\"\r\n                            ? \"#000000\"\r\n                            : \"#7851A9\"\r\n                        }>\r\n                            {message}\r\n                        </LogEntry>\r\n                        : <Line key={`Line-${i}`}/>\r\n                    ))\r\n                }\r\n                </SwapDirectionWrap>\r\n            </MovesWrap>\r\n    </HamburgerGrid>\r\n}\r\n\r\nexport const Log = ({}) => {\r\n\r\n  const [gameContextState, dispatch] = React.useContext(GameContext);\r\n  const [hamburgerState, updateHamburgerState] = React.useState(false);\r\n\r\n  const past1x1 = !useMediaQuery({query: '(max-aspect-ratio: 1/1)'});\r\n\r\n  return <>\r\n    {\r\n        hamburgerState \r\n        ? <HamburgerLog updateHamburgerState={updateHamburgerState}/>\r\n        : <MediaQuery minWidth={701}>\r\n            <TurnMoveTracker color={gameContextState.gameState.activePlayer === \"W\" ? \"#FFFFFF\" : \"#000000\"}>\r\n                { past1x1 && <IconWrap>\r\n                    <HelpIcon onClick={() => dispatch(Actions.setWindowState(\"Info\"))}/>\r\n                    </IconWrap>\r\n                }   \r\n                    Turn {gameContextState.gameState.turnNumber}\r\n                { past1x1 && <IconWrap>\r\n                    <SettingsIcon onClick={() => dispatch(Actions.setWindowState(\"Settings\"))}/>\r\n                    </IconWrap>\r\n                }\r\n            </TurnMoveTracker>\r\n                <MovesWrap>\r\n                    <SwapDirectionWrap>\r\n                    {\r\n                        (gameContextState?.gameState?.moveLog ?? []).map((message, i) => (\r\n                            message !== \"-\" \r\n                            ? <LogEntry key={`Message-${i}`} color={\r\n                                message.substring(0, 5) === \"White\"\r\n                                ? \"#FFFFFF\"\r\n                                : message.substring(0, 5) === \"Black\"\r\n                                ? \"#000000\"\r\n                                : \"#7851A9\"\r\n                            }>\r\n                                {message}\r\n                            </LogEntry>\r\n                            : <Line key={`Line-${i}`}/>\r\n                        ))\r\n                    }\r\n                    </SwapDirectionWrap>\r\n                </MovesWrap>\r\n                { !past1x1 && <LogButtonsMiniGroup/> }\r\n        </MediaQuery>\r\n    }\r\n    <MediaQuery maxWidth={700}>\r\n        <StyledMenuIcon onClick={() => updateHamburgerState(true)}/>\r\n    </MediaQuery>\r\n  </>\r\n};\r\n","export const MenuIcon = (props) => (\r\n    <svg {...props} viewBox=\"0 0 24 24\" fill=\"#7851A9\">\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n        <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\r\n    </svg>\r\n);","\r\nexport const Arrow = (props) => (\r\n    <svg {...props} viewBox=\"0 0 24 24\">\r\n        <path d=\"M5,9l1.41,1.41L11,5.83V22H13V5.83l4.59,4.59L19,9l-7-7L5,9z\"/>\r\n    </svg>\r\n)","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport * as g from '../../global/components';\r\nimport * as Actions from '../gameContext/actions'\r\nimport { GameContext } from '../gameContext';\r\n\r\n\r\nconst DiceRow = styled.div`\r\n    grid-area: dice;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    @media only screen and (max-aspect-ratio: 1/1) {\r\n        flex-direction: column-reverse;\r\n        grid-area: rMenu;\r\n        @media only screen and (max-width: 700px) {\r\n            flex-direction: row;\r\n            grid-area: dice;\r\n            width: 75%;\r\n            align-self: center;\r\n            justify-self: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Die = styled(g.Triangle)`\r\n    aspect-ratio: 1;\r\n    margin: 10px;\r\n    max-height: 12vh;\r\n    fill: ${props => props.color === \"W\"\r\n      ? \"#FFFFFF\"\r\n      : \"#000000\"\r\n    };\r\n    @media only screen and (max-width: 700px) {\r\n        margin: 5px;\r\n    }\r\n`;\r\n\r\nconst RollButton = styled.div`\r\n    position: relative;\r\n    margin-left: 30px;\r\n    max-height: 12vh;\r\n    border-radius: 2px;\r\n    padding: 50px;\r\n    background-color: #7851A9;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    @media only screen and (max-aspect-ratio: 1/1) {\r\n        margin: 0 0 30px 0;\r\n        @media only screen and (max-width: 700px) {\r\n            margin: 0 0 0 10px;\r\n            padding: 30px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst RollText = styled.div`\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    transform: translate(-50%, -50%);\r\n    top: 50%;\r\n    left: 50%;\r\n    position: absolute;\r\n\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n     -khtml-user-select: none;\r\n       -moz-user-select: none;\r\n        -ms-user-select: none;\r\n            user-select: none;\r\n    @media only screen and (max-width: 700px) {\r\n        font-size: 0.75rem;\r\n    }\r\n`;\r\n\r\nexport const Dice = ({}) => {\r\n\r\n    const [gameContextState, dispatch] = React.useContext(GameContext);\r\n    \r\n    return (\r\n        <DiceRow>\r\n            {\r\n                Array(4).fill(0).map((e, i) =>\r\n                    <Die\r\n                        key={i}\r\n                        color={gameContextState.gameState.rollResult[i] ? \"B\" : \"W\"}\r\n                    />\r\n                )\r\n            }\r\n            {\r\n                !gameContextState.gameState.rolled &&\r\n                <RollButton onClick={() => dispatch(Actions.rollDice())}>\r\n                    <RollText>\r\n                        Roll\r\n                    </RollText>\r\n                </RollButton>\r\n            }\r\n        </DiceRow>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport * as g from '../../global/components';\r\nimport * as Actions from '../gameContext/actions';\r\nimport { GameContext } from '../gameContext';\r\n\r\nexport const WinScreen = ({}) => {\r\n    \r\n    const [gameContextState, dispatch] = React.useContext(GameContext);\r\n\r\n    return <>\r\n        <g.Blur/> \r\n        <g.Window>\r\n            <g.SubTitleText>\r\n                { gameContextState.boardState[0][5].length >= 6 && \"White Wins!\" }\r\n                { gameContextState.boardState[2][5].length >= 6 && \"Black Wins!\" }\r\n            </g.SubTitleText>\r\n            <g.SubTitleTextButton onClick={() => dispatch(Actions.resetState())}>\r\n                Play Again\r\n            </g.SubTitleTextButton>\r\n        </g.Window>\r\n    </>\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport * as g from '../../global/components';\r\nimport * as Actions from '../gameContext/actions'\r\nimport { GameContext } from '../gameContext';\r\nimport { ArrowBoard } from './assets/arrowBoard';\r\n\r\nconst InstructionWrap = styled.div`\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n`;\r\n\r\nconst ListWrap = styled.div`\r\n    font-size: 1rem;\r\n    line-height: 2em;\r\n    text-align: left;\r\n    font-weight: 400;\r\n    color: #FFFFFF;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    @media only screen and (max-width: 700px) {\r\n        font-size: 0.75rem;\r\n    }\r\n`;\r\n\r\nconst StyledArrowBoard = styled(ArrowBoard)`\r\n    position: relative;\r\n    transform: translate(-50%, 0);\r\n    left: 50%;\r\n    width: 50vw;\r\n    margin-top: 5vh;\r\n`;\r\n\r\nconst InfoWindow = ({}) => {\r\n\r\n    const [_, dispatch] = React.useContext(GameContext);\r\n\r\n    return <>\r\n        <g.Blur onClick={() => dispatch(Actions.setWindowState(\"\"))}/> \r\n        <g.Window>\r\n            <InstructionWrap>\r\n                <g.MenuH2>\r\n                    How to play\r\n                </g.MenuH2>\r\n                <ListWrap>\r\n                    • The goal of the game is to get all of your stones from the start (E3 for white and E1 for black) to the end. (F3 for white and F1 for black)<br/>\r\n                    • The current turn number is displayed in the top left, the color of the text indicates which player is up.<br/>\r\n                    • During each player's turn they roll the dice at the bottom of the screen.<br/>\r\n                    • The number of black triangles you roll determines how many spaces you can move one of your stones.<br/>\r\n                    • You can move any of your stones by clicking on them, they will move using the path drawn below.<br/>\r\n                    • You can only have one stone on each tile except the start and end. (E3 and F3 for white E1 and F1 for black)<br/>\r\n                    • If you land on a purple tile you go again.<br/>\r\n                    • If you land on an opponent's stone you send their stone back to the beginning.<br/>\r\n                    • You cannot land on an opponent's stone if they are on a purple tile.<br/>\r\n                    • You must land on the end (F3 for white and F1 for black) exactly to move there.\r\n                </ListWrap>\r\n                <StyledArrowBoard/>\r\n            </InstructionWrap>\r\n        </g.Window>\r\n    </>\r\n};\r\n\r\nconst SettingsWindow = ({}) => {\r\n\r\n    const [_, dispatch] = React.useContext(GameContext);\r\n\r\n    return  <>\r\n        <g.Blur onClick={() => dispatch(Actions.setWindowState(\"\"))}/> \r\n        <g.Window>\r\n            <g.MenuH2>\r\n                Settings\r\n            </g.MenuH2>\r\n            <g.SubTitleTextButton onClick={() => { \r\n                dispatch(Actions.resetState());\r\n                dispatch(Actions.setWindowState(\"\"));\r\n            }}>\r\n                Reset Game\r\n            </g.SubTitleTextButton>\r\n        </g.Window>\r\n    </>\r\n};\r\n\r\nexport const PopupWindows = ({}) => {\r\n\r\n    const [gameContextState, _] = React.useContext(GameContext);\r\n\r\n    return <>\r\n        {\r\n            gameContextState.gameState.windowState === \"Info\" && <InfoWindow/>\r\n        }\r\n        {\r\n            gameContextState.gameState.windowState === \"Settings\" && <SettingsWindow/>\r\n        }\r\n    </>\r\n};\r\n","\r\nexport const ArrowBoard = (props) => (\r\n    <svg {...props} viewBox=\"0 0 1040 498.5\">\r\n        <defs>\r\n            <style>\r\n                {\r\n                    \".cls-1{fill:#fefefe}\"+\r\n                    \".cls-2{fill:#a9a9a9}\"+\r\n                    \".cls-3{fill:#7751a8}\"+\r\n                    \".cls-4{fill:#fe0040}\"+\r\n                    \".cls-5{fill:#373737}\"\r\n                }\r\n            </style>\r\n        </defs>\r\n        <g>\r\n            <path className=\"cls-1\" d=\"M454.61,64.37c8.57,0,17.14.09,25.71.1,14.07,0,28.13,0,42.2,0,1.84,0,2.59.3,2.51,2.38-.18,4.57-.18,9.16,0,13.73.09,2.11-.7,2.41-2.53,2.41q-32.34-.06-64.67,0c-1.08,0-2.16.07-3.24.11a3.44,3.44,0,0,1-2.45,1c-.91,0-1.83.06-2.74.06q-51.88,0-103.77,0c-1.77,0-3.71.44-5.18-1.1H320.6a3.44,3.44,0,0,1-2.45,1c-.91,0-1.82.06-2.74.06q-51.89,0-103.76,0c-1.78,0-3.71.44-5.19-1.1H186.62a3.88,3.88,0,0,1-3.2,1.09c-9.81-.17-19.62.4-29.44-.37a129.08,129.08,0,0,0-14.72,0c-4.27.15-5.55,1.56-5.56,5.92,0,15.64,0,31.29,0,46.93,0,1.55.28,3.21-1.07,4.46v19.36c1.17,1.11,1,2.56,1.06,4,0,6.9,0,13.8,0,20.7,0,4.57,1.14,5.72,5.8,5.74,14.22.07,28.44,0,42.66,0,1.55,0,3.2-.24,4.46,1.06h19.83a3.56,3.56,0,0,1,2.48-1c.91,0,1.83,0,2.74,0q51.86,0,103.71,0c1.79,0,3.71-.41,5.23,1.06h19.83a3.56,3.56,0,0,1,2.47-1c.92,0,1.83,0,2.75,0q51.85,0,103.71,0c1.79,0,3.71-.41,5.23,1.06h19.83a3.56,3.56,0,0,1,2.47-1c.92,0,1.83,0,2.75,0q51.86,0,103.7,0c1.79,0,3.71-.41,5.23,1.06h19.83a3.56,3.56,0,0,1,2.48-1c.91,0,1.83,0,2.74,0q51.86,0,103.71,0c1.79,0,3.71-.41,5.23,1.06H742.4a3.56,3.56,0,0,1,2.47-1c.92,0,1.83,0,2.75,0q51.86,0,103.71,0c1.79,0,3.71-.41,5.23,1.06h19.33c1.26-1.31,2.91-1.05,4.46-1.06,12.06,0,24.11,0,36.17,0H919c4.66-.07,5.76-1.13,5.79-5.76.05-6.9,0-13.8,0-20.7,0-1.4-.1-2.86,1-4q0-9.68,0-19.35c-1.32-1.26-1-2.91-1-4.46,0-13,0-25.94,0-38.92,0-6.24-.76-7-7.06-7-1.58,0-3.16,0-4.74,0-11.22.34-22.43-.72-33.65-.53a4.41,4.41,0,0,1-3.48-1H856.55a3.73,3.73,0,0,1-2.49,1c-.91,0-1.83.06-2.75.06q-51.82,0-103.67,0c-1.79,0-3.71.41-5.24-1-6.58,0-13.16,0-19.74-.13-1.55,0-1.74.61-1.72,1.91.07,4.25,0,8.5,0,12.74,0,3.12-1.52,4.08-4.32,2.66Q692.81,94.26,669,82.13c-1-.49-2-.95-2-2.28s1-1.82,2-2.32q23.82-12.09,47.66-24.18c2.81-1.43,4.32-.5,4.33,2.61,0,4.25,0,8.5,0,12.74,0,1.31.18,1.93,1.72,1.9,6.58-.11,13.16-.09,19.74-.12a3.52,3.52,0,0,1,2.47-1c.92,0,1.83-.06,2.75-.06q51.86,0,103.71,0c1.79,0,3.71-.42,5.22,1.06h19.34a4,4,0,0,1,3.21-1c15.39,0,30.79-.36,46.17.13,7.84.25,15,3.12,19.89,9.83A14.07,14.07,0,0,1,948.07,88c-.15,15.89.89,31.76.53,47.64,0,1,0,2-.05,3a3.39,3.39,0,0,1-1,2.46q0,9.67,0,19.35a4.18,4.18,0,0,1,1,3.22c0,9.23.44,18.48-.12,27.68-.66,10.83-8.91,20.18-20.74,20.26-17.29.11-34.59.24-51.89-.09-6.48.26-13,.24-19.43,0-1.58.12-3.16.15-4.74.15H747.3c-1.58,0-3.16,0-4.73-.15q-10.07.35-20.14,0c-1.66.13-3.32.15-5,.15H613.57c-1.67,0-3.33,0-5-.15q-10.07.35-20.13,0c-1.66.13-3.33.15-5,.15H479.58c-1.66,0-3.33,0-5-.15q-10.06.35-20.13,0c-1.66.13-3.32.15-5,.15H345.59c-1.66,0-3.32,0-5-.15q-10.07.35-20.14,0c-1.66.13-3.32.15-5,.15H211.63c-1.67,0-3.33,0-5-.15-6.65.22-13.29.26-19.94,0q-27.94.47-55.9,0c-7.59-.12-17.62-5.51-19.93-14.49a16.56,16.56,0,0,1-.45-4.19c0-6.49,0-13,0-19.47a56,56,0,0,0-.36-8c-.24-1.68-.49-3.51.92-5V141.07a4,4,0,0,1-1-3.22c0-17.82-.29-35.65.1-53.46a21.31,21.31,0,0,1,21.6-21c16.82.21,33.65,0,50.48.06,1.56,0,3.19-.21,4.52,1h19.82c1.4-1.23,3.13-1,4.77-1q26.72,0,53.44,0,25.61,0,51.2,0c1.64,0,3.36-.25,4.77,1h19.81c1.4-1.23,3.12-1,4.76-1q26.73,0,53.45,0,25.61,0,51.2,0C451.48,63.41,453.2,63.16,454.61,64.37Z\"/>\r\n            <path d=\"M111,294.4q0-9.93,0-19.86c-1.39-1.35-1.17-3.12-1-4.72.74-5.9.28-11.81.4-17.72.06-3.08.11-6.17,0-9.24-.31-8.54,4.25-13.89,11.45-17.41a26.71,26.71,0,0,1,12.08-2.63c16.08.12,32.16.05,48.25,0,1.5,0,3,.09,4.49.15,6.65-.25,13.29-.23,19.94,0,1.66-.12,3.32-.15,5-.15q51.93,0,103.86,0c1.66,0,3.32,0,5,.15q10.06-.33,20.13,0c1.67-.12,3.33-.15,5-.15q51.94,0,103.88,0c1.67,0,3.33,0,5,.15q10.06-.33,20.13,0c1.66-.12,3.33-.15,5-.15q51.94,0,103.88,0c1.66,0,3.33,0,5,.15q10.07-.33,20.13,0c1.66-.12,3.32-.15,5-.15q51.93,0,103.87,0c1.67,0,3.33,0,5,.15q10.07-.33,20.13,0c1.67-.12,3.33-.15,5-.15q51.93,0,103.86,0c1.66,0,3.33,0,5,.16,6.48-.22,12.95-.26,19.43,0,17.63-.3,35.26-.38,52.88,0,11.3.24,19.19,9.73,19.79,20.14.54,9.45.15,19,.11,28.42a3.79,3.79,0,0,1-1,3q0,9.93,0,19.86a4.36,4.36,0,0,1,1.05,3.47c0,8.57.36,17.16-.11,25.7-.38,7-.52,14-.3,20.94.29,9.22-5.57,15.12-12.74,18.09a34.39,34.39,0,0,1-13.64,2.55c-13.81-.11-27.62,0-41.44,0-1.55,0-3.2.26-4.46-1.06H856.55a3.53,3.53,0,0,1-2.47,1c-.91,0-1.83.05-2.74.05q-51.87,0-103.72,0c-1.78,0-3.71.43-5.22-1.06-6.57,0-13.15,0-19.72-.12-1.53,0-1.76.61-1.74,1.91.07,4.16,0,8.32,0,12.49,0,3.33-1.45,4.31-4.35,2.84Q692.78,369.1,669,357c-1-.49-2-1-2-2.31s1-1.79,2-2.29q23.81-12.09,47.62-24.19c2.8-1.41,4.31-.46,4.33,2.65,0,4.24,0,8.49,0,12.73,0,1.31.2,1.95,1.74,1.92,6.57-.1,13.15-.09,19.72-.12a3.75,3.75,0,0,1,2.49-1c.92,0,1.83-.05,2.75-.05q51.84,0,103.68,0c1.79,0,3.71-.4,5.24,1h19.33c1.05-1.06,2.4-1,3.73-1,12.72.06,25.43-.87,38.15-.52.75,0,1.5,0,2.25,0,3.5-.21,4.75-1.45,4.76-5,.07-13.14,0-26.28.05-39.42,0-1.71-.36-3.54,1-5V274.54c-1.18-1.1-1-2.57-1-4,0-7,0-14,0-20.94,0-4.94-1-6-6-6-12.8,0-25.6,0-38.4,0-1.55,0-3.2.26-4.46-1H856.56a3.78,3.78,0,0,1-2.73,1c-.83,0-1.66,0-2.49,0q-51.86,0-103.72,0c-1.78,0-3.71.43-5.22-1H722.57a3.74,3.74,0,0,1-2.72,1c-.84,0-1.67,0-2.5,0q-51.86,0-103.71,0c-1.79,0-3.71.43-5.22-1H588.58a3.55,3.55,0,0,1-2.47,1c-.92,0-1.84.06-2.75.06q-51.86,0-103.71,0c-1.78,0-3.71.43-5.22-1H454.6a3.78,3.78,0,0,1-2.73,1c-.83,0-1.66,0-2.49,0q-51.86,0-103.71,0c-1.79,0-3.72.43-5.23-1H320.61a3.74,3.74,0,0,1-2.72,1c-.84,0-1.67,0-2.5,0q-51.86,0-103.71,0c-1.79,0-3.71.43-5.22-1H186.63c-1.27,1.29-2.91,1-4.47,1-13.63,0-27.26,0-40.9,0-7,0-7.57.59-7.57,7.49,0,6.56,0,13.13,0,19.69,0,1.33.07,2.7-1.06,3.71q0,9.93,0,19.86c1.32,1.26,1.07,2.91,1.07,4.47,0,14.73,0,29.47,0,44.21,0,6.81.91,7.73,7.8,7.74,13.56,0,27.12-.86,40.69-.48,1.55,0,3.21-.25,4.44,1.11h19.84a3.33,3.33,0,0,1,2.44-1.06c.92,0,1.83-.06,2.74-.06q51.9,0,103.78,0c1.78,0,3.71-.43,5.19,1.1h19.83a3.37,3.37,0,0,1,2.45-1.06c.91,0,1.83-.06,2.74-.06q51.89,0,103.78,0c1.78,0,3.71-.43,5.19,1.1,6.66,0,13.33.1,20,.1,15.91,0,31.83.07,47.74,0,2.28,0,2.78.68,2.69,2.81-.17,4.41-.14,8.83,0,13.24.06,1.92-.42,2.52-2.44,2.51-15.58-.09-31.16-.06-46.74,0-7.08,0-14.16.07-21.24.1-1.41,1.23-3.13,1-4.77,1q-27.09,0-54.18,0-25.22,0-50.44,0c-1.64,0-3.36.27-4.77-1H320.61c-1.4,1.23-3.13,1-4.76,1q-27.11,0-54.19,0-25.22,0-50.44,0c-1.63,0-3.36.27-4.76-1H186.62a4.88,4.88,0,0,1-3.52,1c-17.75,0-35.49.1-53.24,0-9-.07-17.27-7.48-19.36-17a23.83,23.83,0,0,1-.6-5.2q0-25.11,0-50.23C109.92,297.15,109.73,295.59,111,294.4Z\"/>\r\n            <path className=\"cls-2\" d=\"M875.89,364c16,0,32,0,47.92-.14a26.78,26.78,0,0,0,17.68-6.4,15.21,15.21,0,0,0,5.5-12c.07-13.36.3-26.73.46-40.09,0-3.66.06-7.32.08-11,13.41,0,26.82,0,40.22,0,2.06,0,2.86.34,2.85,2.68q-.12,54.43,0,108.89c0,2.08-.57,2.62-2.63,2.62q-54.71-.09-109.41,0c-2.29,0-2.72-.7-2.71-2.81C875.93,391.85,875.89,378,875.89,364Z\"/>\r\n            <path className=\"cls-2\" d=\"M947.53,141.08c0-.75-.09-1.5-.07-2.25.37-17-.49-33.93-.58-50.9,0-7.37-4.92-11.76-11.19-14.59a31.28,31.28,0,0,0-13.08-2.8c-15.57,0-31.15,0-46.72-.06,0-13.74,0-27.48,0-41.22,0-2.05.32-2.86,2.67-2.86q54.71.13,109.42,0c2.06,0,2.65.52,2.65,2.62q-.09,54.71,0,109.41c0,2.35-.8,2.67-2.85,2.66C974.34,141,960.94,141.07,947.53,141.08Z\"/>\r\n            <path className=\"cls-3\" d=\"M111,294.4q0,27.36.08,54.71a20.77,20.77,0,0,0,16.89,20.64,20.07,20.07,0,0,0,3.72.28h52c1,0,2,.07,3,.1,0,11.91-.05,23.81,0,35.72,0,2-.45,2.69-2.6,2.69q-54.57-.1-109.15,0c-2,0-2.47-.67-2.47-2.56q.07-54.57,0-109.14c0-2,.67-2.49,2.57-2.48C87,294.44,99,294.41,111,294.4Z\"/>\r\n            <path className=\"cls-3\" d=\"M186.62,64.37c-7,0-14,.09-21,.1-11.32,0-22.64,0-34,0a20.42,20.42,0,0,0-20.61,20.65c0,17.65,0,35.3,0,53,0,1-.06,2-.09,3-12,0-24,0-36,0-1.89,0-2.56-.42-2.56-2.46q.09-54.82,0-109.65c0-1.9.45-2.56,2.48-2.56q54.57.09,109.16,0c2.18,0,2.59.74,2.58,2.72C186.57,40.89,186.62,52.63,186.62,64.37Z\"/>\r\n            <path className=\"cls-2\" d=\"M206.46,83.07c.75,0,1.5-.09,2.24-.09q54.84,0,109.66,0c.75,0,1.5.06,2.24.1,0,18.48,0,37,.06,55.45,0,2.13-.65,2.58-2.67,2.58q-54.47-.09-108.92,0c-2.36,0-2.66-.83-2.65-2.86C206.49,119.87,206.46,101.47,206.46,83.07Z\"/>\r\n            <path className=\"cls-2\" d=\"M340.45,83.07c.74,0,1.49-.09,2.24-.09q54.82,0,109.66,0c.74,0,1.49.06,2.24.1,0,18.48,0,37,.06,55.45,0,2.13-.66,2.58-2.68,2.58q-54.45-.09-108.91,0c-2.37,0-2.66-.83-2.66-2.86C340.47,119.87,340.45,101.47,340.45,83.07Z\"/>\r\n            <path className=\"cls-2\" d=\"M320.61,351.45c-.66,0-1.32.1-2,.1H208.45c-.67,0-1.33-.07-2-.1,0-18.16,0-36.32-.05-54.47,0-2.1.59-2.63,2.65-2.63q54.46.11,109,0c2.06,0,2.66.53,2.65,2.62C320.58,315.14,320.61,333.29,320.61,351.45Z\"/>\r\n            <path className=\"cls-2\" d=\"M454.6,351.45c-.66,0-1.33.1-2,.1H342.43c-.66,0-1.32-.07-2-.1,0-18.16,0-36.32,0-54.47,0-2.1.58-2.63,2.64-2.63q54.48.11,109,0c2.06,0,2.65.53,2.64,2.62C454.56,315.14,454.6,333.29,454.6,351.45Z\"/>\r\n            <path className=\"cls-2\" d=\"M947.54,274.54q0-14.87-.08-29.71A20.5,20.5,0,0,0,926.58,224l-50.69-.08c-.28-.31-.69-.57-.74-1a42.1,42.1,0,0,1,0-11.38c.05-.42.46-.68.73-1l50.69-.08a20.52,20.52,0,0,0,20.89-20.87q0-14.59.08-29.21c13.4,0,26.8,0,40.2,0,2,0,2.87.32,2.86,2.67q-.12,54.44,0,108.86c0,2-.47,2.68-2.6,2.66C974.51,274.49,961,274.54,947.54,274.54Z\"/>\r\n            <path className=\"cls-3\" d=\"M742.4,89.15c.67,0,1.33-.09,2-.09H854.56c.66,0,1.33.06,2,.09,0,16.4,0,32.8.05,49.2,0,2.22-.61,2.77-2.79,2.77q-54.33-.1-108.67,0c-2.19,0-2.8-.55-2.79-2.77C742.45,122,742.4,105.55,742.4,89.15Z\"/>\r\n            <path className=\"cls-3\" d=\"M856.56,345.37c-.67,0-1.33.09-2,.09H744.39c-.66,0-1.32-.06-2-.09,0-16.07.05-32.15,0-48.22,0-2.19.55-2.79,2.77-2.79q54.35.11,108.69,0c2.23,0,2.79.61,2.78,2.79C856.51,313.23,856.55,329.3,856.56,345.37Z\"/>\r\n            <path className=\"cls-2\" d=\"M186.63,223.93,132.9,224a24.06,24.06,0,0,0-16,6.05,14.67,14.67,0,0,0-5.4,11.83c.07,4.5-.08,9,0,13.5.16,6.39-.29,12.77-.6,19.15-11.9,0-23.8-.05-35.7,0-2.06,0-2.85-.32-2.85-2.67q.14-54.42,0-108.84c0-2.33.78-2.7,2.85-2.68,11.9.09,23.8,0,35.7,0a285.18,285.18,0,0,1,.51,30.66c-.18,8.15,3.71,13.39,10.64,16.78a25.56,25.56,0,0,0,11.55,2.68c17.66-.08,35.31,0,53,0a2.62,2.62,0,0,1,.92,1.7,82.41,82.41,0,0,1,0,9.94A2.65,2.65,0,0,1,186.63,223.93Z\"/>\r\n            <path className=\"cls-3\" d=\"M742.4,364c.67,0,1.33-.09,2-.09H854.56c.67,0,1.33.06,2,.09,0,13.91,0,27.82.05,41.73,0,2.18-.54,2.79-2.77,2.78q-54.36-.1-108.71,0c-2.22,0-2.78-.6-2.76-2.78C742.45,391.86,742.4,378,742.4,364Z\"/>\r\n            <path className=\"cls-3\" d=\"M856.55,70.47c-.66,0-1.33.09-2,.09H744.39c-.66,0-1.32,0-2-.08,0-13.75.05-27.5,0-41.24,0-2.15.49-2.82,2.75-2.82q54.36.1,108.73,0c2.26,0,2.77.66,2.76,2.82C856.5,43,856.55,56.73,856.55,70.47Z\"/>\r\n            <path className=\"cls-2\" d=\"M206.46,370.15c.58,0,1.16-.11,1.74-.11H318.87c.58,0,1.16.07,1.74.1,0,11.91,0,23.81,0,35.71,0,2-.36,2.71-2.55,2.7q-54.57-.1-109.13,0c-2.19,0-2.57-.72-2.55-2.7C206.5,394,206.46,382.05,206.46,370.15Z\"/>\r\n            <path className=\"cls-2\" d=\"M340.44,370.15c.58,0,1.16-.11,1.74-.11H452.86c.58,0,1.16.07,1.74.1,0,11.91,0,23.81,0,35.71,0,2-.37,2.71-2.55,2.7q-54.57-.1-109.14,0c-2.18,0-2.56-.72-2.55-2.7C340.49,394,340.44,382.05,340.44,370.15Z\"/>\r\n            <path className=\"cls-2\" d=\"M320.62,64.37c-.83,0-1.66.11-2.49.11H208.93c-.83,0-1.66-.06-2.49-.1,0-11.82.06-23.65,0-35.47,0-2,.59-2.49,2.53-2.49q54.59.09,109.18,0c1.92,0,2.55.47,2.54,2.48C320.57,40.73,320.62,52.55,320.62,64.37Z\"/>\r\n            <path className=\"cls-2\" d=\"M454.61,64.37c-.83,0-1.66.11-2.49.11H342.92c-.83,0-1.66-.06-2.49-.1,0-11.82.06-23.65,0-35.47,0-2,.59-2.49,2.53-2.49q54.58.09,109.18,0c1.92,0,2.55.47,2.53,2.48C454.55,40.73,454.6,52.55,454.61,64.37Z\"/>\r\n            <path className=\"cls-2\" d=\"M742.4,242.58c.58,0,1.16-.09,1.75-.09H854.82c.58,0,1.16.06,1.74.09,0,9.9,0,19.8,0,29.7,0,1.68-.38,2.29-2.19,2.29q-54.92-.07-109.84,0c-1.81,0-2.2-.61-2.19-2.29C742.44,262.38,742.4,252.48,742.4,242.58Z\"/>\r\n            <path className=\"cls-2\" d=\"M608.42,242.58c.58,0,1.16-.09,1.74-.09H720.83c.58,0,1.16.06,1.74.09,0,9.9,0,19.8,0,29.7,0,1.68-.38,2.29-2.19,2.29q-54.92-.07-109.84,0c-1.81,0-2.2-.61-2.19-2.29C608.45,262.38,608.42,252.48,608.42,242.58Z\"/>\r\n            <path className=\"cls-3\" d=\"M474.43,242.58c.66,0,1.33-.09,2-.09H586.59c.66,0,1.33.06,2,.09,0,9.82-.05,19.65,0,29.48,0,2-.54,2.52-2.52,2.52q-54.6-.09-109.19,0c-2,0-2.54-.56-2.52-2.52C474.48,262.23,474.43,252.41,474.43,242.58Z\"/>\r\n            <path className=\"cls-2\" d=\"M206.46,242.58c.58,0,1.16-.09,1.74-.09H318.87c.58,0,1.16.06,1.74.09,0,9.9,0,19.8,0,29.7,0,1.68-.38,2.29-2.19,2.29q-54.92-.07-109.84,0c-1.81,0-2.2-.61-2.18-2.29C206.49,262.38,206.46,252.48,206.46,242.58Z\"/>\r\n            <path className=\"cls-2\" d=\"M340.44,242.58c.58,0,1.17-.09,1.75-.09H452.86c.58,0,1.16.06,1.74.09,0,9.9,0,19.8,0,29.7,0,1.68-.38,2.29-2.19,2.29q-54.92-.07-109.84,0c-1.81,0-2.2-.61-2.19-2.29C340.48,262.38,340.44,252.48,340.44,242.58Z\"/>\r\n            <path className=\"cls-2\" d=\"M454.6,191.94c-.67,0-1.33.08-2,.08H342.43c-.66,0-1.33-.05-2-.08,0-9.65,0-19.31,0-29,0-1.83.31-2.6,2.41-2.6q54.71.1,109.39,0c2.09,0,2.44.75,2.42,2.59C454.56,172.62,454.6,182.28,454.6,191.94Z\"/>\r\n            <path className=\"cls-2\" d=\"M320.61,191.94c-.67,0-1.33.08-2,.08H208.45c-.67,0-1.33-.05-2-.08,0-9.65.05-19.31,0-29,0-1.83.31-2.6,2.42-2.6q54.69.1,109.38,0c2.09,0,2.44.75,2.43,2.59C320.57,172.62,320.61,182.28,320.61,191.94Z\"/>\r\n            <path className=\"cls-2\" d=\"M856.56,191.94c-.67,0-1.33.08-2,.08H744.39c-.66,0-1.33-.05-2-.08,0-9.65,0-19.31,0-29,0-1.83.31-2.6,2.41-2.6q54.71.1,109.39,0c2.09,0,2.44.75,2.42,2.59C856.52,172.62,856.56,182.28,856.56,191.94Z\"/>\r\n            <path className=\"cls-2\" d=\"M722.57,191.94c-.67,0-1.33.08-2,.08H610.41c-.67,0-1.33-.05-2-.08,0-9.65.05-19.31,0-29,0-1.83.31-2.6,2.42-2.6q54.69.1,109.38,0c2.09,0,2.44.75,2.43,2.59C722.53,172.62,722.57,182.28,722.57,191.94Z\"/>\r\n            <path className=\"cls-3\" d=\"M588.58,191.94c-.67,0-1.33.08-2,.08H476.42c-.66,0-1.33-.05-2-.08,0-9.66.05-19.33,0-29,0-1.93.49-2.55,2.5-2.55q54.61.09,109.22,0c2,0,2.52.62,2.5,2.55C588.53,172.61,588.58,182.27,588.58,191.94Z\"/>\r\n            <path className=\"cls-3\" d=\"M132.6,141.07q0-16.62-.1-33.22c0-6.5-.14-13-.09-19.48,0-3.74,1.79-5.64,5.51-5.63,16.23,0,32.46.21,48.7.33,0,18.38,0,36.77,0,55.15,0,2.28-.61,2.91-2.9,2.9C166.71,141,149.66,141.07,132.6,141.07Z\"/>\r\n            <path className=\"cls-3\" d=\"M186.62,351.45c-.5,0-1,.1-1.49.1q-22.81.15-45.62.27c-5.64,0-7.14-1.47-7.12-7.06q.08-25.17.21-50.36c17.06,0,34.12.05,51.18,0,2.32,0,2.89.67,2.88,2.92C186.58,315.34,186.62,333.39,186.62,351.45Z\"/>\r\n            <path className=\"cls-2\" d=\"M875.88,89.14c15-.38,30.07.57,45.11.4,3.19,0,5,1.81,5,4.66,0,15.63-.09,31.25-.14,46.88-15.79,0-31.59-.05-47.38,0-2,0-2.67-.48-2.66-2.59C875.93,122.06,875.88,105.6,875.88,89.14Z\"/>\r\n            <path className=\"cls-2\" d=\"M925.88,294.4c0,2.32.07,4.65.08,7q.06,19,.1,37.94c0,3.94-1.59,5.65-5.53,5.72-5.57.1-11.15,0-16.72.1-9.31.07-18.61.6-27.92.23,0-16.13,0-32.26,0-48.39,0-2.08.57-2.64,2.64-2.63C894.28,294.44,910.08,294.4,925.88,294.4Z\"/>\r\n            <path className=\"cls-2\" d=\"M132.61,274.54c-.43-9.14-.19-18.27-.15-27.41,0-2.84,1.85-4.54,5-4.65,3.73-.12,7.48-.08,11.22-.06q18.95.06,37.9.16c0,9.72-.09,19.45.06,29.18,0,2.38-.76,2.83-2.95,2.82C166.7,274.5,149.65,274.54,132.61,274.54Z\"/>\r\n            <path className=\"cls-2\" d=\"M186.62,191.94c-16.28,0-32.57.12-48.86.09-3.63,0-5.31-1.85-5.3-5.43,0-8.72.1-17.44.15-26.17,17.13,0,34.27,0,51.4,0,2,0,2.69.49,2.66,2.6C186.56,172.64,186.62,182.29,186.62,191.94Z\"/>\r\n            <path className=\"cls-2\" d=\"M875.89,242.58c3,0,6-.08,9-.09q17.57-.06,35.13-.09c4.41,0,6,1.62,6,6,0,8.72-.1,17.44-.16,26.16-15.79,0-31.58,0-47.37,0-2,0-2.68-.46-2.66-2.58C876,262.19,875.89,252.39,875.89,242.58Z\"/>\r\n            <path className=\"cls-2\" d=\"M925.87,160.43c0,8.89.14,17.77.12,26.66,0,3.14-1.84,5-5,5-15,0-30.07-.07-45.1-.12,0-9.73.05-19.45,0-29.18,0-1.87.53-2.38,2.38-2.37C894.11,160.46,910,160.43,925.87,160.43Z\"/>\r\n            <path className=\"cls-1\" d=\"M266.54,449.21c3.64,1.81,4.75,3.85,4,7.14-.63,2.63-3.38,4.53-6.66,4.6-6.29.14-6.29.14-6.29-6.07,0-4.49.06-9,0-13.48,0-1.52.39-2.12,2-2,1.32.12,2.67,0,4,0,3.07,0,5.2,1.2,5.92,3.24C270.2,445,269.35,447,266.54,449.21Z\"/>\r\n            <path className=\"cls-1\" d=\"M523.52,450.1c0-3,0-6,0-9,0-.84-.1-1.75,1.19-1.67,2.73.16,5.46-.28,8.18.36,5.29,1.24,7.63,4.06,7.77,9.64s-2.73,9.67-7.49,11c-2.78.76-5.6.42-8.41.52-1.26,0-1.24-.76-1.24-1.64C523.53,456.25,523.52,453.17,523.52,450.1Z\"/>\r\n            <path className=\"cls-1\" d=\"M940.7,442.56a13.69,13.69,0,0,0-5.76-1.3c-3.54,0-6.15,1.59-7.4,4.85-1.4,3.67-1.37,7.37,1.25,10.61,2.32,2.86,5.52,2.65,8.71,2.14A1.55,1.55,0,0,0,939,457a9.88,9.88,0,0,1,0-2.49c.21-1.7-.34-2.51-2.15-2.23a6,6,0,0,1-1.74-.05c-.82-.12-.65-.81-.69-1.37s.3-.88.89-.87h.25c5.75-.71,5.92-.57,5.92,5.15,0,5.12-1,6.13-6.25,6.35-4.25.18-7.78-1.27-9.71-5.19-2.15-4.41-2-8.93.94-13,2.84-3.89,6.92-5,11.52-4.07C941.16,439.83,941.14,439.91,940.7,442.56Z\"/>\r\n            <path className=\"cls-1\" d=\"M139,460.72c-2,.71-2.79-.08-3.4-1.79-1.49-4.19-1.56-4.17-6-4.17s-4.63,0-6,4.17c-.57,1.8-1.38,2.48-3.34,1.76,2.57-6.73,5.17-13.46,7.68-20.21.35-.94.91-1,1.7-1a1.42,1.42,0,0,1,1.63,1.1C133.83,447.28,136.42,454,139,460.72Z\"/>\r\n            <path className=\"cls-1\" d=\"M660.49,450.13c0-3,0-6,0-9,0-1.26.27-1.79,1.64-1.74,2.58.11,5.16,0,7.73,0,.77,0,1.53-.08,1.49,1.09s-.59,1.24-1.45,1.23c-1.75,0-3.5.07-5.24,0-1.34-.07-1.64.47-1.68,1.73-.16,5.45-.2,5.41,5.34,5.53.76,0,2.17-.84,2.25.95s-1.38,1.27-2.29,1.29c-5.45.1-5.4.08-5.3,5.59,0,1.4.4,1.92,1.83,1.84,1.82-.11,3.65,0,5.48,0,1,0,1.6.22,1.55,1.38s-.95.92-1.62.93c-2.66,0-5.33-.07-8,.05-1.5.06-1.79-.55-1.75-1.88C660.54,456.12,660.49,453.12,660.49,450.13Z\"/>\r\n            <path className=\"cls-1\" d=\"M392,450.55c0,6.55,4.6,9.88,11.36,8.26.7-.17,1.56-1.09,1.93.34.27,1.07-.51,1.47-1.34,1.74-4.73,1.58-9.9.23-12.44-3.24-2.76-3.78-2.79-10.13-.06-14.15,2.61-3.84,7.55-5.42,12.41-4.14,1.15.3,1.63.79,1.42,1.85-.29,1.46-1.17.55-1.88.38C396.71,440,392,443.7,392,450.55Z\"/>\r\n            <path className=\"cls-1\" d=\"M35.6,85.29c4.32,2.42,5.42,5,3.57,8.33-1.74,3.14-7.3,4.51-10.63,2.66-1.24-.69-1.08-1.64-.74-2.82,2.22,1.06,4.34,2.2,6.89,1.17,1.83-.75,2.86-1.93,2.82-3.92a3.75,3.75,0,0,0-3-3.75,12.14,12.14,0,0,0-3.69-.42c-.6,0-.89-.26-.9-.88s.11-1.15.92-1.12a17,17,0,0,0,1.75,0c3-.25,4.54-2.17,4.06-5-.37-2.22-2.59-3.44-5.2-2.85-.24,0-.5.31-.69.25-.75-.24-1.63,1.56-2.14,0s.84-1.66,1.9-2c5.32-1.54,9.29,1.27,8.56,6.1C38.75,83.15,37.33,84.33,35.6,85.29Z\"/>\r\n            <path className=\"cls-1\" d=\"M28.63,212.38c-.62-1.54,0-2.39,1.31-3,2.94-1.46,6.66-1,8.5,1.16s1.68,6.22-.35,8.79A23.76,23.76,0,0,1,33.76,223c-1,.76-1.92,1.57-2.82,2.43a2.25,2.25,0,0,0-.8,2.46c.42,1,1.46.47,2.22.49,2.24.07,4.48,0,6.73,0,.74,0,1.51-.13,1.5,1.07s-.86,1-1.55,1c-3.33,0-6.66-.07-10,0-1.42.05-1.61-.51-1.57-1.74A7.05,7.05,0,0,1,30,223.59c1.36-1.21,2.83-2.31,4.25-3.45A7.44,7.44,0,0,0,37,216.65c.57-1.82.67-3.7-.86-5.11s-3.34-1.27-5.12-.47C30.2,211.44,29.44,211.93,28.63,212.38Z\"/>\r\n            <path className=\"cls-1\" d=\"M800.37,439.45c1.25,0,2.5,0,3.75,0,.82,0,1.44,0,1.4,1.15s-.66,1.17-1.48,1.16c-1.66,0-3.33.06-5,0-1.32-.06-1.9.29-1.95,1.78-.18,5.41-.24,5.41,5.21,5.42.42,0,.84,0,1.25,0,.86,0,1.44.14,1.4,1.21s-.57,1.09-1.3,1.09a31.27,31.27,0,0,1-3.75,0c-2.11-.25-3.08.35-2.81,2.68.21,1.81,0,3.66,0,5.49,0,.92,0,1.61-1.29,1.56s-1.05-.81-1.05-1.54c0-6.16,0-12.32,0-18.48,0-1.23.45-1.58,1.6-1.51C797.71,439.51,799,439.45,800.37,439.45Z\"/>\r\n            <path className=\"cls-1\" d=\"M34.07,346.3a26.66,26.66,0,0,1-3.13,1.53c-.48.16-1.26,1-1.63,0-.22-.61-.41-1.52.56-1.93a38.64,38.64,0,0,0,5.63-3.11c1.23-.78,1,.48,1,1.11,0,6.39,0,12.79,0,19.18,0,.8,0,1.43-1.13,1.44s-1.37-.56-1.36-1.53c0-4.65,0-9.31,0-14Z\"/>\r\n            <path className=\"cls-3\" d=\"M588.58,223.93c-.5,0-1,.08-1.49.08H475.92c-.5,0-1-.06-1.49-.08-.28-.31-.69-.57-.74-1a41.7,41.7,0,0,1,0-11.38c.05-.42.46-.67.74-1,.58,0,1.16-.08,1.74-.08H586.84c.58,0,1.16.05,1.74.08a2.57,2.57,0,0,1,.93,1.7,82.41,82.41,0,0,1,0,9.94A2.59,2.59,0,0,1,588.58,223.93Z\"/>\r\n            <path className=\"cls-2\" d=\"M722.57,223.93a4.13,4.13,0,0,1-.49.07H608.91a3.85,3.85,0,0,1-.49-.07c-.28-.31-.69-.57-.75-1a42.51,42.51,0,0,1,0-11.38c.06-.42.47-.68.74-1,1.16,0,2.33-.08,3.49-.08H719.08c1.16,0,2.33.05,3.49.08a2.59,2.59,0,0,1,.93,1.7,86.74,86.74,0,0,1,0,9.94A2.61,2.61,0,0,1,722.57,223.93Z\"/>\r\n            <path className=\"cls-2\" d=\"M320.61,223.93a4.13,4.13,0,0,1-.49.07H207a4.13,4.13,0,0,1-.49-.07c-.28-.31-.69-.57-.75-1a42.51,42.51,0,0,1,0-11.38c.06-.42.47-.68.74-1,1.17,0,2.33-.08,3.49-.08H317.12c1.16,0,2.33.05,3.49.08a2.59,2.59,0,0,1,.93,1.7,86.74,86.74,0,0,1,0,9.94A2.61,2.61,0,0,1,320.61,223.93Z\"/>\r\n            <path className=\"cls-2\" d=\"M856.56,223.93a4.13,4.13,0,0,1-.49.07H742.9a4.29,4.29,0,0,1-.5-.07c-.27-.31-.68-.57-.74-1a42.51,42.51,0,0,1,0-11.38c.05-.42.46-.68.74-1,1.16,0,2.33-.08,3.49-.08H853.06c1.17,0,2.33.05,3.5.08a2.62,2.62,0,0,1,.92,1.7,82.41,82.41,0,0,1,0,9.94A2.65,2.65,0,0,1,856.56,223.93Z\"/>\r\n            <path className=\"cls-2\" d=\"M454.6,223.93a4.13,4.13,0,0,1-.49.07H340.94a4.29,4.29,0,0,1-.5-.07c-.27-.31-.68-.57-.74-1a42.51,42.51,0,0,1,0-11.38c.05-.42.46-.68.74-1,1.16,0,2.33-.08,3.49-.08H451.1c1.17,0,2.33.05,3.5.08a2.62,2.62,0,0,1,.92,1.7,84.52,84.52,0,0,1,0,9.94A2.7,2.7,0,0,1,454.6,223.93Z\"/>\r\n            <path className=\"cls-5\" d=\"M340.44,210.59v13.34H320.61V210.59Z\"/>\r\n            <path className=\"cls-5\" d=\"M206.45,210.59q0,6.66,0,13.34H186.63V210.59Z\"/>\r\n            <path className=\"cls-5\" d=\"M742.4,210.59v13.34H722.57V210.59Z\"/>\r\n            <path className=\"cls-5\" d=\"M608.41,210.59v13.34H588.58V210.59Z\"/>\r\n            <path className=\"cls-5\" d=\"M454.6,223.93V210.59h19.83v13.34Z\"/>\r\n            <path className=\"cls-5\" d=\"M856.56,223.93V210.59h19.32q0,6.66,0,13.34Z\"/>\r\n            <path className=\"cls-5\" d=\"M260.06,454.56c.36-1.54-1.11-4,2.44-3.79,4,.25,5.51,1.06,5.54,3.8s-1.46,3.76-5.3,4.07S260.42,456.27,260.06,454.56Z\"/>\r\n            <path className=\"cls-5\" d=\"M260.11,445.39c0-1.93-.68-3.93,2.49-3.62s4.42.88,4.4,3.07c0,2.38-1.73,3.48-4.88,3.66S260.47,446.45,260.11,445.39Z\"/>\r\n            <path className=\"cls-5\" d=\"M526.08,450c0-2.08.1-4.16,0-6.23-.1-1.59.54-2,2-1.91,1.64.13,3.32-.13,4.94.37,3.81,1.18,5.34,4,5,9.13a7.51,7.51,0,0,1-6.2,7.12c-5.32.92-5.72.59-5.72-4.74Z\"/>\r\n            <path className=\"cls-5\" d=\"M133.18,452.37c-.83,0-1.32.08-1.82.08H126c1.13-3.16,2.19-6.1,3.25-9.05l.62,0C130.93,446.26,132,449.15,133.18,452.37Z\"/>\r\n        </g>\r\n    </svg>\r\n);","import React from 'react';\r\nimport * as g from '../../global/components';\r\nimport * as Actions from '../gameContext/actions'\r\nimport { GameContext } from '../gameContext';\r\n\r\n\r\nexport const PreGameMenu = ({}) => {\r\n\r\n    const [_, dispatch] = React.useContext(GameContext);\r\n    const first = Math.random() >= 0.5 ? \"Player 1\" : \"Player 2\" \r\n\r\n    return <>\r\n        <g.Blur/> \r\n        <g.Window>\r\n            <g.MenuH2>\r\n                Choose Game Mode\r\n            </g.MenuH2>\r\n            <g.SubTitleTextButton key=\"pvpButton\" onClick={() => {\r\n                dispatch(Actions.setGameType(\"lpvp\"))\r\n                dispatch(Actions.setWhoFirst(first))\r\n            }}>\r\n                Player vs Player \r\n            </g.SubTitleTextButton>\r\n            <g.SubTitleTextButton key=\"pvmButton\" onClick={() => {\r\n                dispatch(Actions.setGameType(\"pvm\"))\r\n                dispatch(Actions.setWhoFirst(first))\r\n            }}>\r\n                Player vs A.I.\r\n            </g.SubTitleTextButton>\r\n        </g.Window>\r\n    </>\r\n};\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { GameContext } from '../gameContext';\r\n\r\nconst TitleTextWrap = styled.div`\r\n    grid-area: mainHead;\r\n    margin: 0;\r\n    padding: 0;\r\n    text-align: center;\r\n    color: #7851A9;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    margin: 0;\r\n    font-size: 3.5rem;\r\n    font-size: 42px;\r\n    padding: 2vh 0;\r\n    letter-spacing: 0.1em;\r\n    font-weight: 700;\r\n    @media only screen and (max-aspect-ratio: 1/1) {\r\n        font-size: 2rem;\r\n        @media only screen and (max-width: 700px) {\r\n            font-size: 1.5rem;\r\n            padding: 10px 0 5px 0;\r\n        }\r\n    }\r\n    @media only screen and (max-height: 550px) {\r\n        font-size: 1rem;\r\n    }\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n    margin: 0;\r\n    font-size: 2rem;\r\n    letter-spacing: 0.1em;\r\n    font-weight: 700;\r\n    color: #FFFFFF;\r\n    @media only screen and (max-aspect-ratio: 1/1) {\r\n        font-size: 1rem;\r\n        @media only screen and (max-width: 700px) {\r\n            font-size: 0.75rem;\r\n        }\r\n    }\r\n    @media only screen and (max-height: 550px) {\r\n        font-size: 0.5rem;\r\n    }\r\n`;\r\n\r\nexport const TitleHead = ({}) => {\r\n\r\n    const [gameContextState, _] = React.useContext(GameContext);\r\n\r\n    return <TitleTextWrap>\r\n        <H1>Game of Twenty Squares Beta</H1>\r\n        { gameContextState.gameState.gameType === \"lpvp\" && <H2>Player vs Player</H2> }\r\n        { gameContextState.gameState.gameType === \"pvm\" && <H2>Player vs AI</H2> }\r\n    </TitleTextWrap>\r\n};\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { GameContext, reducer, defaultGameState, isAITurn, aiTurn } from './gameContext';\r\n\r\nimport { Board } from './board';\r\nimport { Log } from './log';\r\nimport { Dice } from './dice';\r\nimport { WinScreen } from './winScreen';\r\nimport { PopupWindows } from './popupWindows';\r\nimport { PreGameMenu } from './preGameMenu';\r\nimport { TitleHead } from './titleHead';\r\n\r\nconst didSomeoneWin = (state) => (\r\n    state.boardState[0][5].stones.length >= 6 \r\n    || state.boardState[2][5].stones.length >= 6\r\n)\r\n\r\nconst UIGrid = styled.div`\r\n    display: grid;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    grid-template-rows: 1fr 1fr 6fr 2fr;\r\n    grid-template-columns: 1fr 3fr 1fr;\r\n    grid-template-areas: \r\n        \"lMenuHead mainHead rMenuHead\"\r\n        \"lMenu mainHead rMenu\"\r\n        \"lMenu board rMenu\"\r\n        \"lMenu dice rMenu\";\r\n    @media only screen and (max-aspect-ratio: 1/1) {\r\n        grid-template-areas: \r\n        \"lMenuHead mainHead rMenuHead\"\r\n        \"lMenu board rMenu\"\r\n        \"lMenu board rMenu\"\r\n        \"lMenu board rMenu\";\r\n    }\r\n    @media only screen and (max-width: 700px) {\r\n        grid-template-rows: 1fr 9fr 1fr;\r\n        grid-template-columns: 1fr 4fr 1fr;\r\n        grid-template-areas: \r\n        \"lMenuHead mainHead rMenuHead\"\r\n        \"board board board\"\r\n        \"dice dice dice\";\r\n    }\r\n`;\r\n\r\nexport const Game = ({}) => {\r\n\r\n    const innerContext = React.useReducer(reducer, defaultGameState);\r\n    const [gameContextState, dispatch] = innerContext;\r\n\r\n    React.useEffect(() => {\r\n        if(isAITurn(gameContextState)){\r\n            aiTurn(gameContextState, dispatch);\r\n        }\r\n    }, [gameContextState]);\r\n\r\n    return <>\r\n        <GameContext.Provider value={innerContext}>\r\n            <UIGrid>\r\n                <TitleHead/>\r\n                {\r\n                    gameContextState.gameState.gameType === \"\"\r\n                    ? <PreGameMenu/>\r\n                    : !didSomeoneWin(gameContextState) \r\n                        ? <>\r\n                            <Log/>\r\n                            <Dice/>\r\n                            <Board/>\r\n                        </>\r\n                        : <WinScreen/>\r\n                }\r\n            </UIGrid>\r\n            <PopupWindows/>\r\n        </GameContext.Provider>\r\n    </>\r\n}\r\n","import * as Actions from '../actions';\r\nimport { validateMove, getTileModifierWithCoords, getTileStonesWithCoords } from './boardStateFunctions';\r\nimport { whiteStoneIDs, blackStoneIDs, whiteStonePath, blackStonePath, compareCoords, calculateLandingCoords } from './gameConstants';\r\n\r\nexport const isAITurn = (state) => (\r\n    state.gameState.gameType === \"pvm\"\r\n    && (\r\n        state.gameState.whoFirst === \"Player 2\"\r\n            ? state.gameState.activePlayer === \"W\"\r\n            : state.gameState.activePlayer === \"B\"\r\n    )\r\n  );\r\n\r\nexport const aiTurn = (state, dispatch) => {\r\n\r\n    if (!state.gameState.rolled) {\r\n        dispatch(Actions.rollDice());\r\n    }\r\n\r\n    const aiStones = state.gameState.whoFirst === \"Player 2\" ? whiteStoneIDs : blackStoneIDs;\r\n    const aiPath = state.gameState.whoFirst === \"Player 2\" ? whiteStonePath : blackStonePath;\r\n    const validStonesToMove = aiStones.filter((stoneID) => validateMove(state, stoneID));\r\n\r\n    if (validStonesToMove.length > 0) {\r\n        const strengthOfMove = validStonesToMove.map((stoneID) => {\r\n            const landingCoords = calculateLandingCoords(state, stoneID);\r\n            const [x, y] = landingCoords;\r\n            const strengthValue = (\r\n                    (\r\n                        (getTileStonesWithCoords(state, x, y)?.length ?? 0) > 0 \r\n                        && (getTileModifierWithCoords(state, x, y) ?? \"\") !== \"Empty\" \r\n                            ? 40 \r\n                            : 0 \r\n                    )\r\n                + \r\n                    (\r\n                        (getTileModifierWithCoords(state, x, y) ?? \"\") === \"Rosette\" \r\n                            ? 20\r\n                            : 0\r\n                    )\r\n                + \r\n                    (\r\n                        aiPath.reduce((accumulator, pathCoords, index) => (\r\n                            compareCoords(pathCoords, landingCoords)\r\n                                ? index+1\r\n                                : accumulator\r\n                        ), 0)\r\n                    )\r\n            );\r\n            return ({\r\n                stoneID: stoneID,\r\n                strength: strengthValue,\r\n            });\r\n        });\r\n\r\n\r\n        const sortedStrengthOfMove = strengthOfMove.sort((firstMove, secondMove)=> secondMove.strength - firstMove.strength)\r\n        console.log(sortedStrengthOfMove);\r\n        const bestStoneToMove = sortedStrengthOfMove[0].stoneID;\r\n        dispatch(Actions.moveStone(bestStoneToMove));\r\n        dispatch(Actions.resetRolled());\r\n    }\r\n};","import React from 'react';\r\nimport './global/styles/App.css';\r\n\r\nimport { Game }   from './game';\r\n\r\nconst App = () => (\r\n    <Game/>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './global/styles/App.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}